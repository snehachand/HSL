// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "dct.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic dct::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic dct::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<32> dct::ap_ST_fsm_state1 = "1";
const sc_lv<32> dct::ap_ST_fsm_state2 = "10";
const sc_lv<32> dct::ap_ST_fsm_state3 = "100";
const sc_lv<32> dct::ap_ST_fsm_state4 = "1000";
const sc_lv<32> dct::ap_ST_fsm_state5 = "10000";
const sc_lv<32> dct::ap_ST_fsm_state6 = "100000";
const sc_lv<32> dct::ap_ST_fsm_state7 = "1000000";
const sc_lv<32> dct::ap_ST_fsm_state8 = "10000000";
const sc_lv<32> dct::ap_ST_fsm_state9 = "100000000";
const sc_lv<32> dct::ap_ST_fsm_state10 = "1000000000";
const sc_lv<32> dct::ap_ST_fsm_state11 = "10000000000";
const sc_lv<32> dct::ap_ST_fsm_state12 = "100000000000";
const sc_lv<32> dct::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<32> dct::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<32> dct::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<32> dct::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<32> dct::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<32> dct::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<32> dct::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<32> dct::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<32> dct::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<32> dct::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<32> dct::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<32> dct::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<32> dct::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<32> dct::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<32> dct::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<32> dct::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<32> dct::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<32> dct::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<32> dct::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<32> dct::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<32> dct::ap_const_lv32_0 = "00000000000000000000000000000000";
const int dct::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> dct::ap_const_lv32_9 = "1001";
const sc_lv<32> dct::ap_const_lv32_D = "1101";
const sc_lv<32> dct::ap_const_lv32_18 = "11000";
const sc_lv<32> dct::ap_const_lv32_1E = "11110";
const sc_lv<32> dct::ap_const_lv32_1 = "1";
const sc_lv<1> dct::ap_const_lv1_0 = "0";
const sc_lv<32> dct::ap_const_lv32_2 = "10";
const sc_lv<32> dct::ap_const_lv32_3 = "11";
const sc_lv<1> dct::ap_const_lv1_1 = "1";
const sc_lv<32> dct::ap_const_lv32_4 = "100";
const sc_lv<32> dct::ap_const_lv32_5 = "101";
const sc_lv<32> dct::ap_const_lv32_6 = "110";
const sc_lv<32> dct::ap_const_lv32_8 = "1000";
const sc_lv<32> dct::ap_const_lv32_12 = "10010";
const sc_lv<4> dct::ap_const_lv4_0 = "0000";
const sc_lv<32> dct::ap_const_lv32_1F = "11111";
const sc_lv<32> dct::ap_const_lv32_E = "1110";
const sc_lv<32> dct::ap_const_lv32_A = "1010";
const sc_lv<32> dct::ap_const_lv32_13 = "10011";
const sc_lv<32> dct::ap_const_lv32_19 = "11001";
const sc_lv<4> dct::ap_const_lv4_8 = "1000";
const sc_lv<4> dct::ap_const_lv4_1 = "1";
const sc_lv<3> dct::ap_const_lv3_0 = "000";
const sc_lv<64> dct::ap_const_lv64_3FC6A09E60000000 = "11111111000110101000001001111001100000000000000000000000000000";
const sc_lv<64> dct::ap_const_lv64_3FD0000000000000 = "11111111010000000000000000000000000000000000000000000000000000";
const sc_lv<64> dct::ap_const_lv64_3FE6A09E60000000 = "11111111100110101000001001111001100000000000000000000000000000";
const sc_lv<64> dct::ap_const_lv64_3FF0000000000000 = "11111111110000000000000000000000000000000000000000000000000000";
const bool dct::ap_const_boolean_1 = true;

dct::dct(sc_module_name name) : sc_module(name), mVcdFile(0) {
    constant_r_U = new dct_constant_r("constant_r_U");
    constant_r_U->clk(ap_clk);
    constant_r_U->reset(ap_rst_n_inv);
    constant_r_U->address0(constant_r_address0);
    constant_r_U->ce0(constant_r_ce0);
    constant_r_U->q0(constant_r_q0);
    dct_AXILiteS_s_axi_U = new dct_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>("dct_AXILiteS_s_axi_U");
    dct_AXILiteS_s_axi_U->AWVALID(s_axi_AXILiteS_AWVALID);
    dct_AXILiteS_s_axi_U->AWREADY(s_axi_AXILiteS_AWREADY);
    dct_AXILiteS_s_axi_U->AWADDR(s_axi_AXILiteS_AWADDR);
    dct_AXILiteS_s_axi_U->WVALID(s_axi_AXILiteS_WVALID);
    dct_AXILiteS_s_axi_U->WREADY(s_axi_AXILiteS_WREADY);
    dct_AXILiteS_s_axi_U->WDATA(s_axi_AXILiteS_WDATA);
    dct_AXILiteS_s_axi_U->WSTRB(s_axi_AXILiteS_WSTRB);
    dct_AXILiteS_s_axi_U->ARVALID(s_axi_AXILiteS_ARVALID);
    dct_AXILiteS_s_axi_U->ARREADY(s_axi_AXILiteS_ARREADY);
    dct_AXILiteS_s_axi_U->ARADDR(s_axi_AXILiteS_ARADDR);
    dct_AXILiteS_s_axi_U->RVALID(s_axi_AXILiteS_RVALID);
    dct_AXILiteS_s_axi_U->RREADY(s_axi_AXILiteS_RREADY);
    dct_AXILiteS_s_axi_U->RDATA(s_axi_AXILiteS_RDATA);
    dct_AXILiteS_s_axi_U->RRESP(s_axi_AXILiteS_RRESP);
    dct_AXILiteS_s_axi_U->BVALID(s_axi_AXILiteS_BVALID);
    dct_AXILiteS_s_axi_U->BREADY(s_axi_AXILiteS_BREADY);
    dct_AXILiteS_s_axi_U->BRESP(s_axi_AXILiteS_BRESP);
    dct_AXILiteS_s_axi_U->ACLK(ap_clk);
    dct_AXILiteS_s_axi_U->ARESET(ap_rst_n_inv);
    dct_AXILiteS_s_axi_U->ACLK_EN(ap_var_for_const0);
    dct_AXILiteS_s_axi_U->ap_start(ap_start);
    dct_AXILiteS_s_axi_U->interrupt(interrupt);
    dct_AXILiteS_s_axi_U->ap_ready(ap_ready);
    dct_AXILiteS_s_axi_U->ap_done(ap_done);
    dct_AXILiteS_s_axi_U->ap_idle(ap_idle);
    dct_AXILiteS_s_axi_U->dataIn_address0(dataIn_address0);
    dct_AXILiteS_s_axi_U->dataIn_ce0(dataIn_ce0);
    dct_AXILiteS_s_axi_U->dataIn_q0(dataIn_q0);
    dct_AXILiteS_s_axi_U->dataOut_address0(dataOut_address0);
    dct_AXILiteS_s_axi_U->dataOut_ce0(dataOut_ce0);
    dct_AXILiteS_s_axi_U->dataOut_we0(dataOut_we0);
    dct_AXILiteS_s_axi_U->dataOut_d0(tmp_8_fu_183_p1);
    dct_fadd_32ns_32nbkb_U1 = new dct_fadd_32ns_32nbkb<1,5,32,32,32>("dct_fadd_32ns_32nbkb_U1");
    dct_fadd_32ns_32nbkb_U1->clk(ap_clk);
    dct_fadd_32ns_32nbkb_U1->reset(ap_rst_n_inv);
    dct_fadd_32ns_32nbkb_U1->din0(ds_1_reg_150);
    dct_fadd_32ns_32nbkb_U1->din1(reg_195);
    dct_fadd_32ns_32nbkb_U1->ce(ap_var_for_const0);
    dct_fadd_32ns_32nbkb_U1->dout(grp_fu_173_p2);
    dct_fmul_32ns_32ncud_U2 = new dct_fmul_32ns_32ncud<1,4,32,32,32>("dct_fmul_32ns_32ncud_U2");
    dct_fmul_32ns_32ncud_U2->clk(ap_clk);
    dct_fmul_32ns_32ncud_U2->reset(ap_rst_n_inv);
    dct_fmul_32ns_32ncud_U2->din0(grp_fu_178_p0);
    dct_fmul_32ns_32ncud_U2->din1(grp_fu_178_p1);
    dct_fmul_32ns_32ncud_U2->ce(ap_var_for_const0);
    dct_fmul_32ns_32ncud_U2->dout(grp_fu_178_p2);
    dct_fptrunc_64ns_dEe_U3 = new dct_fptrunc_64ns_dEe<1,1,64,32>("dct_fptrunc_64ns_dEe_U3");
    dct_fptrunc_64ns_dEe_U3->din0(reg_201);
    dct_fptrunc_64ns_dEe_U3->dout(tmp_8_fu_183_p1);
    dct_fpext_32ns_64eOg_U4 = new dct_fpext_32ns_64eOg<1,1,32,64>("dct_fpext_32ns_64eOg_U4");
    dct_fpext_32ns_64eOg_U4->din0(ds_reg_127);
    dct_fpext_32ns_64eOg_U4->dout(tmp_4_fu_187_p1);
    dct_dmul_64ns_64nfYi_U5 = new dct_dmul_64ns_64nfYi<1,6,64,64,64>("dct_dmul_64ns_64nfYi_U5");
    dct_dmul_64ns_64nfYi_U5->clk(ap_clk);
    dct_dmul_64ns_64nfYi_U5->reset(ap_rst_n_inv);
    dct_dmul_64ns_64nfYi_U5->din0(grp_fu_191_p0);
    dct_dmul_64ns_64nfYi_U5->din1(grp_fu_191_p1);
    dct_dmul_64ns_64nfYi_U5->ce(ap_var_for_const0);
    dct_dmul_64ns_64nfYi_U5->dout(grp_fu_191_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state26);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state31);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state32);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_fu_207_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_fu_207_p2 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_constant_r_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_13_fu_304_p1 );
    sensitive << ( tmp_18_fu_358_p1 );

    SC_METHOD(thread_constant_r_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_dataIn_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_15_fu_348_p1 );

    SC_METHOD(thread_dataIn_ce0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_dataOut_address0);
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( tmp_10_fu_362_p1 );

    SC_METHOD(thread_dataOut_ce0);
    sensitive << ( ap_CS_fsm_state32 );

    SC_METHOD(thread_dataOut_we0);
    sensitive << ( ap_CS_fsm_state32 );

    SC_METHOD(thread_exitcond1_fu_283_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( x_reg_139 );

    SC_METHOD(thread_exitcond2_fu_249_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_reg_116 );

    SC_METHOD(thread_exitcond3_fu_207_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_105 );

    SC_METHOD(thread_exitcond_fu_331_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( y_reg_162 );

    SC_METHOD(thread_grp_fu_178_p0);
    sensitive << ( dataIn_q0 );
    sensitive << ( reg_195 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_grp_fu_178_p1);
    sensitive << ( constant_load_reg_441 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( constant_load_1_reg_474 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_grp_fu_191_p0);
    sensitive << ( reg_201 );
    sensitive << ( tmp_5_reg_380 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_grp_fu_191_p1);
    sensitive << ( tmp_9_reg_426 );
    sensitive << ( tmp_4_reg_484 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_i_1_fu_213_p2);
    sensitive << ( i_reg_105 );

    SC_METHOD(thread_j_1_fu_255_p2);
    sensitive << ( j_reg_116 );

    SC_METHOD(thread_j_cast3_fu_245_p1);
    sensitive << ( j_reg_116 );

    SC_METHOD(thread_tmp_10_fu_362_p1);
    sensitive << ( tmp_2_reg_431 );

    SC_METHOD(thread_tmp_11_fu_320_p3);
    sensitive << ( tmp_22_reg_416 );

    SC_METHOD(thread_tmp_12_fu_299_p2);
    sensitive << ( tmp_1_reg_374 );
    sensitive << ( x_cast2_fu_279_p1 );

    SC_METHOD(thread_tmp_13_fu_304_p1);
    sensitive << ( tmp_12_fu_299_p2 );

    SC_METHOD(thread_tmp_14_fu_343_p2);
    sensitive << ( tmp_11_reg_436 );
    sensitive << ( y_cast1_fu_327_p1 );

    SC_METHOD(thread_tmp_15_fu_348_p1);
    sensitive << ( tmp_14_fu_343_p2 );

    SC_METHOD(thread_tmp_17_fu_353_p2);
    sensitive << ( tmp_s_reg_403 );
    sensitive << ( y_cast1_fu_327_p1 );

    SC_METHOD(thread_tmp_18_fu_358_p1);
    sensitive << ( tmp_17_reg_459 );

    SC_METHOD(thread_tmp_1_fu_229_p3);
    sensitive << ( tmp_20_fu_225_p1 );

    SC_METHOD(thread_tmp_20_fu_225_p1);
    sensitive << ( i_reg_105 );

    SC_METHOD(thread_tmp_21_fu_267_p1);
    sensitive << ( j_reg_116 );

    SC_METHOD(thread_tmp_22_fu_295_p1);
    sensitive << ( x_reg_139 );

    SC_METHOD(thread_tmp_2_fu_316_p2);
    sensitive << ( tmp_1_reg_374 );
    sensitive << ( j_cast3_reg_385 );

    SC_METHOD(thread_tmp_5_fu_237_p3);
    sensitive << ( tmp_fu_219_p2 );

    SC_METHOD(thread_tmp_6_fu_261_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond2_fu_249_p2 );
    sensitive << ( j_reg_116 );

    SC_METHOD(thread_tmp_9_fu_309_p3);
    sensitive << ( tmp_6_reg_398 );

    SC_METHOD(thread_tmp_fu_219_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_fu_207_p2 );
    sensitive << ( i_reg_105 );

    SC_METHOD(thread_tmp_s_fu_271_p3);
    sensitive << ( tmp_21_fu_267_p1 );

    SC_METHOD(thread_x_1_fu_289_p2);
    sensitive << ( x_reg_139 );

    SC_METHOD(thread_x_cast2_fu_279_p1);
    sensitive << ( x_reg_139 );

    SC_METHOD(thread_y_1_fu_337_p2);
    sensitive << ( y_reg_162 );

    SC_METHOD(thread_y_cast1_fu_327_p1);
    sensitive << ( y_reg_162 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_fu_207_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond2_fu_249_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond1_fu_283_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( exitcond_fu_331_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "00000000000000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "dct_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWVALID, "(port)s_axi_AXILiteS_AWVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWREADY, "(port)s_axi_AXILiteS_AWREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWADDR, "(port)s_axi_AXILiteS_AWADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_WVALID, "(port)s_axi_AXILiteS_WVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_WREADY, "(port)s_axi_AXILiteS_WREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_WDATA, "(port)s_axi_AXILiteS_WDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_WSTRB, "(port)s_axi_AXILiteS_WSTRB");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARVALID, "(port)s_axi_AXILiteS_ARVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARREADY, "(port)s_axi_AXILiteS_ARREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARADDR, "(port)s_axi_AXILiteS_ARADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_RVALID, "(port)s_axi_AXILiteS_RVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_RREADY, "(port)s_axi_AXILiteS_RREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_RDATA, "(port)s_axi_AXILiteS_RDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_RRESP, "(port)s_axi_AXILiteS_RRESP");
    sc_trace(mVcdFile, s_axi_AXILiteS_BVALID, "(port)s_axi_AXILiteS_BVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_BREADY, "(port)s_axi_AXILiteS_BREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_BRESP, "(port)s_axi_AXILiteS_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, dataIn_address0, "dataIn_address0");
    sc_trace(mVcdFile, dataIn_ce0, "dataIn_ce0");
    sc_trace(mVcdFile, dataIn_q0, "dataIn_q0");
    sc_trace(mVcdFile, dataOut_address0, "dataOut_address0");
    sc_trace(mVcdFile, dataOut_ce0, "dataOut_ce0");
    sc_trace(mVcdFile, dataOut_we0, "dataOut_we0");
    sc_trace(mVcdFile, constant_r_address0, "constant_r_address0");
    sc_trace(mVcdFile, constant_r_ce0, "constant_r_ce0");
    sc_trace(mVcdFile, constant_r_q0, "constant_r_q0");
    sc_trace(mVcdFile, grp_fu_178_p2, "grp_fu_178_p2");
    sc_trace(mVcdFile, reg_195, "reg_195");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, grp_fu_191_p2, "grp_fu_191_p2");
    sc_trace(mVcdFile, reg_201, "reg_201");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, ap_CS_fsm_state31, "ap_CS_fsm_state31");
    sc_trace(mVcdFile, i_1_fu_213_p2, "i_1_fu_213_p2");
    sc_trace(mVcdFile, i_1_reg_369, "i_1_reg_369");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_1_fu_229_p3, "tmp_1_fu_229_p3");
    sc_trace(mVcdFile, tmp_1_reg_374, "tmp_1_reg_374");
    sc_trace(mVcdFile, exitcond3_fu_207_p2, "exitcond3_fu_207_p2");
    sc_trace(mVcdFile, tmp_5_fu_237_p3, "tmp_5_fu_237_p3");
    sc_trace(mVcdFile, tmp_5_reg_380, "tmp_5_reg_380");
    sc_trace(mVcdFile, j_cast3_fu_245_p1, "j_cast3_fu_245_p1");
    sc_trace(mVcdFile, j_cast3_reg_385, "j_cast3_reg_385");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, j_1_fu_255_p2, "j_1_fu_255_p2");
    sc_trace(mVcdFile, j_1_reg_393, "j_1_reg_393");
    sc_trace(mVcdFile, tmp_6_fu_261_p2, "tmp_6_fu_261_p2");
    sc_trace(mVcdFile, tmp_6_reg_398, "tmp_6_reg_398");
    sc_trace(mVcdFile, exitcond2_fu_249_p2, "exitcond2_fu_249_p2");
    sc_trace(mVcdFile, tmp_s_fu_271_p3, "tmp_s_fu_271_p3");
    sc_trace(mVcdFile, tmp_s_reg_403, "tmp_s_reg_403");
    sc_trace(mVcdFile, x_1_fu_289_p2, "x_1_fu_289_p2");
    sc_trace(mVcdFile, x_1_reg_411, "x_1_reg_411");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_22_fu_295_p1, "tmp_22_fu_295_p1");
    sc_trace(mVcdFile, tmp_22_reg_416, "tmp_22_reg_416");
    sc_trace(mVcdFile, exitcond1_fu_283_p2, "exitcond1_fu_283_p2");
    sc_trace(mVcdFile, tmp_9_fu_309_p3, "tmp_9_fu_309_p3");
    sc_trace(mVcdFile, tmp_9_reg_426, "tmp_9_reg_426");
    sc_trace(mVcdFile, tmp_2_fu_316_p2, "tmp_2_fu_316_p2");
    sc_trace(mVcdFile, tmp_2_reg_431, "tmp_2_reg_431");
    sc_trace(mVcdFile, tmp_11_fu_320_p3, "tmp_11_fu_320_p3");
    sc_trace(mVcdFile, tmp_11_reg_436, "tmp_11_reg_436");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, constant_load_reg_441, "constant_load_reg_441");
    sc_trace(mVcdFile, y_1_fu_337_p2, "y_1_fu_337_p2");
    sc_trace(mVcdFile, y_1_reg_449, "y_1_reg_449");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, exitcond_fu_331_p2, "exitcond_fu_331_p2");
    sc_trace(mVcdFile, tmp_17_fu_353_p2, "tmp_17_fu_353_p2");
    sc_trace(mVcdFile, tmp_17_reg_459, "tmp_17_reg_459");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, constant_load_1_reg_474, "constant_load_1_reg_474");
    sc_trace(mVcdFile, grp_fu_173_p2, "grp_fu_173_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, tmp_4_fu_187_p1, "tmp_4_fu_187_p1");
    sc_trace(mVcdFile, tmp_4_reg_484, "tmp_4_reg_484");
    sc_trace(mVcdFile, i_reg_105, "i_reg_105");
    sc_trace(mVcdFile, j_reg_116, "j_reg_116");
    sc_trace(mVcdFile, ap_CS_fsm_state32, "ap_CS_fsm_state32");
    sc_trace(mVcdFile, ds_reg_127, "ds_reg_127");
    sc_trace(mVcdFile, x_reg_139, "x_reg_139");
    sc_trace(mVcdFile, ds_1_reg_150, "ds_1_reg_150");
    sc_trace(mVcdFile, y_reg_162, "y_reg_162");
    sc_trace(mVcdFile, tmp_13_fu_304_p1, "tmp_13_fu_304_p1");
    sc_trace(mVcdFile, tmp_15_fu_348_p1, "tmp_15_fu_348_p1");
    sc_trace(mVcdFile, tmp_18_fu_358_p1, "tmp_18_fu_358_p1");
    sc_trace(mVcdFile, tmp_10_fu_362_p1, "tmp_10_fu_362_p1");
    sc_trace(mVcdFile, tmp_8_fu_183_p1, "tmp_8_fu_183_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, grp_fu_178_p0, "grp_fu_178_p0");
    sc_trace(mVcdFile, grp_fu_178_p1, "grp_fu_178_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, grp_fu_191_p0, "grp_fu_191_p0");
    sc_trace(mVcdFile, grp_fu_191_p1, "grp_fu_191_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, ap_CS_fsm_state26, "ap_CS_fsm_state26");
    sc_trace(mVcdFile, tmp_20_fu_225_p1, "tmp_20_fu_225_p1");
    sc_trace(mVcdFile, tmp_fu_219_p2, "tmp_fu_219_p2");
    sc_trace(mVcdFile, tmp_21_fu_267_p1, "tmp_21_fu_267_p1");
    sc_trace(mVcdFile, x_cast2_fu_279_p1, "x_cast2_fu_279_p1");
    sc_trace(mVcdFile, tmp_12_fu_299_p2, "tmp_12_fu_299_p2");
    sc_trace(mVcdFile, y_cast1_fu_327_p1, "y_cast1_fu_327_p1");
    sc_trace(mVcdFile, tmp_14_fu_343_p2, "tmp_14_fu_343_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("dct.hdltvin.dat");
    mHdltvoutHandle.open("dct.hdltvout.dat");
}

dct::~dct() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete constant_r_U;
    delete dct_AXILiteS_s_axi_U;
    delete dct_fadd_32ns_32nbkb_U1;
    delete dct_fmul_32ns_32ncud_U2;
    delete dct_fptrunc_64ns_dEe_U3;
    delete dct_fpext_32ns_64eOg_U4;
    delete dct_dmul_64ns_64nfYi_U5;
}

void dct::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void dct::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ds_1_reg_150 = ds_reg_127.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        ds_1_reg_150 = grp_fu_173_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_331_p2.read(), ap_const_lv1_1))) {
        ds_reg_127 = ds_1_reg_150.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(exitcond2_fu_249_p2.read(), ap_const_lv1_0))) {
        ds_reg_127 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_249_p2.read(), ap_const_lv1_1))) {
        i_reg_105 = i_1_reg_369.read();
    } else if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        i_reg_105 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond3_fu_207_p2.read(), ap_const_lv1_0))) {
        j_reg_116 = ap_const_lv4_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        j_reg_116 = j_1_reg_393.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_331_p2.read(), ap_const_lv1_1))) {
        x_reg_139 = x_1_reg_411.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(exitcond2_fu_249_p2.read(), ap_const_lv1_0))) {
        x_reg_139 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        y_reg_162 = ap_const_lv4_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        y_reg_162 = y_1_reg_449.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        constant_load_1_reg_474 = constant_r_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        constant_load_reg_441 = constant_r_q0.read();
        tmp_11_reg_436 = tmp_11_fu_320_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_1_reg_369 = i_1_fu_213_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_1_reg_393 = j_1_fu_255_p2.read();
        j_cast3_reg_385 = j_cast3_fu_245_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        reg_195 = grp_fu_178_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()))) {
        reg_201 = grp_fu_191_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(exitcond_fu_331_p2.read(), ap_const_lv1_0))) {
        tmp_17_reg_459 = tmp_17_fu_353_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond3_fu_207_p2.read(), ap_const_lv1_0))) {
        tmp_1_reg_374 = tmp_1_fu_229_p3.read();
        tmp_5_reg_380 = tmp_5_fu_237_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(exitcond1_fu_283_p2.read(), ap_const_lv1_0))) {
        tmp_22_reg_416 = tmp_22_fu_295_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(exitcond1_fu_283_p2.read(), ap_const_lv1_1))) {
        tmp_2_reg_431 = tmp_2_fu_316_p2.read();
        tmp_9_reg_426 = tmp_9_fu_309_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        tmp_4_reg_484 = tmp_4_fu_187_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond2_fu_249_p2.read(), ap_const_lv1_0))) {
        tmp_6_reg_398 = tmp_6_fu_261_p2.read();
        tmp_s_reg_403 = tmp_s_fu_271_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        x_1_reg_411 = x_1_fu_289_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        y_1_reg_449 = y_1_fu_337_p2.read();
    }
}

void dct::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void dct::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void dct::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void dct::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void dct::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void dct::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void dct::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void dct::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void dct::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read()[24];
}

void dct::thread_ap_CS_fsm_state26() {
    ap_CS_fsm_state26 = ap_CS_fsm.read()[25];
}

void dct::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void dct::thread_ap_CS_fsm_state31() {
    ap_CS_fsm_state31 = ap_CS_fsm.read()[30];
}

void dct::thread_ap_CS_fsm_state32() {
    ap_CS_fsm_state32 = ap_CS_fsm.read()[31];
}

void dct::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void dct::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void dct::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void dct::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void dct::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void dct::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond3_fu_207_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void dct::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void dct::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond3_fu_207_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void dct::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void dct::thread_constant_r_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        constant_r_address0 =  (sc_lv<6>) (tmp_18_fu_358_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        constant_r_address0 =  (sc_lv<6>) (tmp_13_fu_304_p1.read());
    } else {
        constant_r_address0 = "XXXXXX";
    }
}

void dct::thread_constant_r_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        constant_r_ce0 = ap_const_logic_1;
    } else {
        constant_r_ce0 = ap_const_logic_0;
    }
}

void dct::thread_dataIn_address0() {
    dataIn_address0 =  (sc_lv<6>) (tmp_15_fu_348_p1.read());
}

void dct::thread_dataIn_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        dataIn_ce0 = ap_const_logic_1;
    } else {
        dataIn_ce0 = ap_const_logic_0;
    }
}

void dct::thread_dataOut_address0() {
    dataOut_address0 =  (sc_lv<6>) (tmp_10_fu_362_p1.read());
}

void dct::thread_dataOut_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        dataOut_ce0 = ap_const_logic_1;
    } else {
        dataOut_ce0 = ap_const_logic_0;
    }
}

void dct::thread_dataOut_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        dataOut_we0 = ap_const_logic_1;
    } else {
        dataOut_we0 = ap_const_logic_0;
    }
}

void dct::thread_exitcond1_fu_283_p2() {
    exitcond1_fu_283_p2 = (!x_reg_139.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(x_reg_139.read() == ap_const_lv4_8);
}

void dct::thread_exitcond2_fu_249_p2() {
    exitcond2_fu_249_p2 = (!j_reg_116.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_116.read() == ap_const_lv4_8);
}

void dct::thread_exitcond3_fu_207_p2() {
    exitcond3_fu_207_p2 = (!i_reg_105.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_105.read() == ap_const_lv4_8);
}

void dct::thread_exitcond_fu_331_p2() {
    exitcond_fu_331_p2 = (!y_reg_162.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(y_reg_162.read() == ap_const_lv4_8);
}

void dct::thread_grp_fu_178_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        grp_fu_178_p0 = reg_195.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_fu_178_p0 = dataIn_q0.read();
    } else {
        grp_fu_178_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void dct::thread_grp_fu_178_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        grp_fu_178_p1 = constant_load_1_reg_474.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_fu_178_p1 = constant_load_reg_441.read();
    } else {
        grp_fu_178_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void dct::thread_grp_fu_191_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        grp_fu_191_p0 = reg_201.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        grp_fu_191_p0 = tmp_5_reg_380.read();
    } else {
        grp_fu_191_p0 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void dct::thread_grp_fu_191_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        grp_fu_191_p1 = tmp_4_reg_484.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        grp_fu_191_p1 = tmp_9_reg_426.read();
    } else {
        grp_fu_191_p1 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void dct::thread_i_1_fu_213_p2() {
    i_1_fu_213_p2 = (!i_reg_105.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_reg_105.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void dct::thread_j_1_fu_255_p2() {
    j_1_fu_255_p2 = (!j_reg_116.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(j_reg_116.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void dct::thread_j_cast3_fu_245_p1() {
    j_cast3_fu_245_p1 = esl_zext<6,4>(j_reg_116.read());
}

void dct::thread_tmp_10_fu_362_p1() {
    tmp_10_fu_362_p1 = esl_zext<64,6>(tmp_2_reg_431.read());
}

void dct::thread_tmp_11_fu_320_p3() {
    tmp_11_fu_320_p3 = esl_concat<3,3>(tmp_22_reg_416.read(), ap_const_lv3_0);
}

void dct::thread_tmp_12_fu_299_p2() {
    tmp_12_fu_299_p2 = (!x_cast2_fu_279_p1.read().is_01() || !tmp_1_reg_374.read().is_01())? sc_lv<6>(): (sc_biguint<6>(x_cast2_fu_279_p1.read()) + sc_biguint<6>(tmp_1_reg_374.read()));
}

void dct::thread_tmp_13_fu_304_p1() {
    tmp_13_fu_304_p1 = esl_zext<64,6>(tmp_12_fu_299_p2.read());
}

void dct::thread_tmp_14_fu_343_p2() {
    tmp_14_fu_343_p2 = (!tmp_11_reg_436.read().is_01() || !y_cast1_fu_327_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_11_reg_436.read()) + sc_biguint<6>(y_cast1_fu_327_p1.read()));
}

void dct::thread_tmp_15_fu_348_p1() {
    tmp_15_fu_348_p1 = esl_zext<64,6>(tmp_14_fu_343_p2.read());
}

void dct::thread_tmp_17_fu_353_p2() {
    tmp_17_fu_353_p2 = (!tmp_s_reg_403.read().is_01() || !y_cast1_fu_327_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_s_reg_403.read()) + sc_biguint<6>(y_cast1_fu_327_p1.read()));
}

void dct::thread_tmp_18_fu_358_p1() {
    tmp_18_fu_358_p1 = esl_zext<64,6>(tmp_17_reg_459.read());
}

void dct::thread_tmp_1_fu_229_p3() {
    tmp_1_fu_229_p3 = esl_concat<3,3>(tmp_20_fu_225_p1.read(), ap_const_lv3_0);
}

void dct::thread_tmp_20_fu_225_p1() {
    tmp_20_fu_225_p1 = i_reg_105.read().range(3-1, 0);
}

void dct::thread_tmp_21_fu_267_p1() {
    tmp_21_fu_267_p1 = j_reg_116.read().range(3-1, 0);
}

void dct::thread_tmp_22_fu_295_p1() {
    tmp_22_fu_295_p1 = x_reg_139.read().range(3-1, 0);
}

void dct::thread_tmp_2_fu_316_p2() {
    tmp_2_fu_316_p2 = (!tmp_1_reg_374.read().is_01() || !j_cast3_reg_385.read().is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_1_reg_374.read()) + sc_biguint<6>(j_cast3_reg_385.read()));
}

void dct::thread_tmp_5_fu_237_p3() {
    tmp_5_fu_237_p3 = (!tmp_fu_219_p2.read()[0].is_01())? sc_lv<64>(): ((tmp_fu_219_p2.read()[0].to_bool())? ap_const_lv64_3FC6A09E60000000: ap_const_lv64_3FD0000000000000);
}

void dct::thread_tmp_6_fu_261_p2() {
    tmp_6_fu_261_p2 = (!j_reg_116.read().is_01() || !ap_const_lv4_0.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_116.read() == ap_const_lv4_0);
}

void dct::thread_tmp_9_fu_309_p3() {
    tmp_9_fu_309_p3 = (!tmp_6_reg_398.read()[0].is_01())? sc_lv<64>(): ((tmp_6_reg_398.read()[0].to_bool())? ap_const_lv64_3FE6A09E60000000: ap_const_lv64_3FF0000000000000);
}

void dct::thread_tmp_fu_219_p2() {
    tmp_fu_219_p2 = (!i_reg_105.read().is_01() || !ap_const_lv4_0.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_105.read() == ap_const_lv4_0);
}

void dct::thread_tmp_s_fu_271_p3() {
    tmp_s_fu_271_p3 = esl_concat<3,3>(tmp_21_fu_267_p1.read(), ap_const_lv3_0);
}

void dct::thread_x_1_fu_289_p2() {
    x_1_fu_289_p2 = (!x_reg_139.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(x_reg_139.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void dct::thread_x_cast2_fu_279_p1() {
    x_cast2_fu_279_p1 = esl_zext<6,4>(x_reg_139.read());
}

void dct::thread_y_1_fu_337_p2() {
    y_1_fu_337_p2 = (!y_reg_162.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(y_reg_162.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void dct::thread_y_cast1_fu_327_p1() {
    y_cast1_fu_327_p1 = esl_zext<6,4>(y_reg_162.read());
}

void dct::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond3_fu_207_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond2_fu_249_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(exitcond1_fu_283_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state20;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(exitcond_fu_331_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_fsm_state32;
            break;
        case 2147483648 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void dct::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWVALID\" :  \"" << s_axi_AXILiteS_AWVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"s_axi_AXILiteS_AWREADY\" :  \"" << s_axi_AXILiteS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWADDR\" :  \"" << s_axi_AXILiteS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WVALID\" :  \"" << s_axi_AXILiteS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_WREADY\" :  \"" << s_axi_AXILiteS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WDATA\" :  \"" << s_axi_AXILiteS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WSTRB\" :  \"" << s_axi_AXILiteS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARVALID\" :  \"" << s_axi_AXILiteS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_ARREADY\" :  \"" << s_axi_AXILiteS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARADDR\" :  \"" << s_axi_AXILiteS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RVALID\" :  \"" << s_axi_AXILiteS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_RREADY\" :  \"" << s_axi_AXILiteS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RDATA\" :  \"" << s_axi_AXILiteS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RRESP\" :  \"" << s_axi_AXILiteS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BVALID\" :  \"" << s_axi_AXILiteS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_BREADY\" :  \"" << s_axi_AXILiteS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BRESP\" :  \"" << s_axi_AXILiteS_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

