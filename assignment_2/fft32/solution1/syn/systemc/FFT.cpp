// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "FFT.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic FFT::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic FFT::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<18> FFT::ap_ST_fsm_state1 = "1";
const sc_lv<18> FFT::ap_ST_fsm_state2 = "10";
const sc_lv<18> FFT::ap_ST_fsm_state3 = "100";
const sc_lv<18> FFT::ap_ST_fsm_state4 = "1000";
const sc_lv<18> FFT::ap_ST_fsm_state5 = "10000";
const sc_lv<18> FFT::ap_ST_fsm_state6 = "100000";
const sc_lv<18> FFT::ap_ST_fsm_state7 = "1000000";
const sc_lv<18> FFT::ap_ST_fsm_state8 = "10000000";
const sc_lv<18> FFT::ap_ST_fsm_state9 = "100000000";
const sc_lv<18> FFT::ap_ST_fsm_state10 = "1000000000";
const sc_lv<18> FFT::ap_ST_fsm_state11 = "10000000000";
const sc_lv<18> FFT::ap_ST_fsm_state12 = "100000000000";
const sc_lv<18> FFT::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<18> FFT::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<18> FFT::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<18> FFT::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<18> FFT::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<18> FFT::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<32> FFT::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> FFT::ap_const_lv1_0 = "0";
const sc_lv<1> FFT::ap_const_lv1_1 = "1";
const sc_lv<2> FFT::ap_const_lv2_0 = "00";
const sc_lv<2> FFT::ap_const_lv2_2 = "10";
const sc_lv<2> FFT::ap_const_lv2_3 = "11";
const sc_lv<2> FFT::ap_const_lv2_1 = "1";
const sc_lv<32> FFT::ap_const_lv32_2 = "10";
const sc_lv<32> FFT::ap_const_lv32_10 = "10000";
const sc_lv<32> FFT::ap_const_lv32_11 = "10001";
const sc_lv<32> FFT::ap_const_lv32_1 = "1";
const sc_lv<32> FFT::ap_const_lv32_3 = "11";
const sc_lv<32> FFT::ap_const_lv32_4 = "100";
const sc_lv<32> FFT::ap_const_lv32_F = "1111";
const sc_lv<6> FFT::ap_const_lv6_0 = "000000";
const sc_lv<32> FFT::ap_const_lv32_5 = "101";
const sc_lv<32> FFT::ap_const_lv32_E = "1110";
const sc_lv<32> FFT::ap_const_lv32_7 = "111";
const sc_lv<32> FFT::ap_const_lv32_9 = "1001";
const sc_lv<32> FFT::ap_const_lv32_B = "1011";
const sc_lv<32> FFT::ap_const_lv32_D = "1101";
const sc_lv<6> FFT::ap_const_lv6_1 = "1";
const sc_lv<32> FFT::ap_const_lv32_6 = "110";
const sc_lv<6> FFT::ap_const_lv6_2 = "10";
const sc_lv<32> FFT::ap_const_lv32_8 = "1000";
const sc_lv<6> FFT::ap_const_lv6_4 = "100";
const sc_lv<32> FFT::ap_const_lv32_A = "1010";
const sc_lv<6> FFT::ap_const_lv6_8 = "1000";
const sc_lv<32> FFT::ap_const_lv32_C = "1100";
const sc_lv<6> FFT::ap_const_lv6_10 = "10000";
const sc_lv<4> FFT::ap_const_lv4_4 = "100";
const sc_lv<4> FFT::ap_const_lv4_3 = "11";
const sc_lv<4> FFT::ap_const_lv4_2 = "10";
const sc_lv<4> FFT::ap_const_lv4_1 = "1";
const sc_lv<4> FFT::ap_const_lv4_0 = "0000";
const sc_lv<4> FFT::ap_const_lv4_5 = "101";
const sc_lv<6> FFT::ap_const_lv6_20 = "100000";
const sc_lv<32> FFT::ap_const_lv32_1F = "11111";
const bool FFT::ap_const_boolean_1 = true;

FFT::FFT(sc_module_name name) : sc_module(name), mVcdFile(0) {
    xin_M_real_V_U = new FFT_xin_M_real_V("xin_M_real_V_U");
    xin_M_real_V_U->clk(ap_clk);
    xin_M_real_V_U->reset(ap_rst_n_inv);
    xin_M_real_V_U->address0(xin_M_real_V_address0);
    xin_M_real_V_U->ce0(xin_M_real_V_ce0);
    xin_M_real_V_U->we0(xin_M_real_V_we0);
    xin_M_real_V_U->d0(xin_M_real_V_d0);
    xin_M_real_V_U->q0(xin_M_real_V_q0);
    xin_M_imag_V_U = new FFT_xin_M_real_V("xin_M_imag_V_U");
    xin_M_imag_V_U->clk(ap_clk);
    xin_M_imag_V_U->reset(ap_rst_n_inv);
    xin_M_imag_V_U->address0(xin_M_imag_V_address0);
    xin_M_imag_V_U->ce0(xin_M_imag_V_ce0);
    xin_M_imag_V_U->we0(xin_M_imag_V_we0);
    xin_M_imag_V_U->d0(xin_M_imag_V_d0);
    xin_M_imag_V_U->q0(xin_M_imag_V_q0);
    rev_32_U = new FFT_rev_32("rev_32_U");
    rev_32_U->clk(ap_clk);
    rev_32_U->reset(ap_rst_n_inv);
    rev_32_U->address0(rev_32_address0);
    rev_32_U->ce0(rev_32_ce0);
    rev_32_U->q0(rev_32_q0);
    data_OUT0_M_real_V_U = new FFT_xin_M_real_V("data_OUT0_M_real_V_U");
    data_OUT0_M_real_V_U->clk(ap_clk);
    data_OUT0_M_real_V_U->reset(ap_rst_n_inv);
    data_OUT0_M_real_V_U->address0(data_OUT0_M_real_V_address0);
    data_OUT0_M_real_V_U->ce0(data_OUT0_M_real_V_ce0);
    data_OUT0_M_real_V_U->we0(data_OUT0_M_real_V_we0);
    data_OUT0_M_real_V_U->d0(xin_M_real_V_q0);
    data_OUT0_M_real_V_U->q0(data_OUT0_M_real_V_q0);
    data_OUT0_M_imag_V_U = new FFT_xin_M_real_V("data_OUT0_M_imag_V_U");
    data_OUT0_M_imag_V_U->clk(ap_clk);
    data_OUT0_M_imag_V_U->reset(ap_rst_n_inv);
    data_OUT0_M_imag_V_U->address0(data_OUT0_M_imag_V_address0);
    data_OUT0_M_imag_V_U->ce0(data_OUT0_M_imag_V_ce0);
    data_OUT0_M_imag_V_U->we0(data_OUT0_M_imag_V_we0);
    data_OUT0_M_imag_V_U->d0(xin_M_imag_V_q0);
    data_OUT0_M_imag_V_U->q0(data_OUT0_M_imag_V_q0);
    data_OUT1_M_real_V_U = new FFT_xin_M_real_V("data_OUT1_M_real_V_U");
    data_OUT1_M_real_V_U->clk(ap_clk);
    data_OUT1_M_real_V_U->reset(ap_rst_n_inv);
    data_OUT1_M_real_V_U->address0(data_OUT1_M_real_V_address0);
    data_OUT1_M_real_V_U->ce0(data_OUT1_M_real_V_ce0);
    data_OUT1_M_real_V_U->we0(data_OUT1_M_real_V_we0);
    data_OUT1_M_real_V_U->d0(grp_FFT0_fu_262_data_OUT_M_real_V_d0);
    data_OUT1_M_real_V_U->q0(data_OUT1_M_real_V_q0);
    data_OUT1_M_imag_V_U = new FFT_xin_M_real_V("data_OUT1_M_imag_V_U");
    data_OUT1_M_imag_V_U->clk(ap_clk);
    data_OUT1_M_imag_V_U->reset(ap_rst_n_inv);
    data_OUT1_M_imag_V_U->address0(data_OUT1_M_imag_V_address0);
    data_OUT1_M_imag_V_U->ce0(data_OUT1_M_imag_V_ce0);
    data_OUT1_M_imag_V_U->we0(data_OUT1_M_imag_V_we0);
    data_OUT1_M_imag_V_U->d0(grp_FFT0_fu_262_data_OUT_M_imag_V_d0);
    data_OUT1_M_imag_V_U->q0(data_OUT1_M_imag_V_q0);
    data_OUT2_M_real_V_U = new FFT_xin_M_real_V("data_OUT2_M_real_V_U");
    data_OUT2_M_real_V_U->clk(ap_clk);
    data_OUT2_M_real_V_U->reset(ap_rst_n_inv);
    data_OUT2_M_real_V_U->address0(data_OUT2_M_real_V_address0);
    data_OUT2_M_real_V_U->ce0(data_OUT2_M_real_V_ce0);
    data_OUT2_M_real_V_U->we0(data_OUT2_M_real_V_we0);
    data_OUT2_M_real_V_U->d0(grp_FFT0_fu_262_data_OUT_M_real_V_d0);
    data_OUT2_M_real_V_U->q0(data_OUT2_M_real_V_q0);
    data_OUT2_M_imag_V_U = new FFT_xin_M_real_V("data_OUT2_M_imag_V_U");
    data_OUT2_M_imag_V_U->clk(ap_clk);
    data_OUT2_M_imag_V_U->reset(ap_rst_n_inv);
    data_OUT2_M_imag_V_U->address0(data_OUT2_M_imag_V_address0);
    data_OUT2_M_imag_V_U->ce0(data_OUT2_M_imag_V_ce0);
    data_OUT2_M_imag_V_U->we0(data_OUT2_M_imag_V_we0);
    data_OUT2_M_imag_V_U->d0(grp_FFT0_fu_262_data_OUT_M_imag_V_d0);
    data_OUT2_M_imag_V_U->q0(data_OUT2_M_imag_V_q0);
    data_OUT3_M_real_V_U = new FFT_xin_M_real_V("data_OUT3_M_real_V_U");
    data_OUT3_M_real_V_U->clk(ap_clk);
    data_OUT3_M_real_V_U->reset(ap_rst_n_inv);
    data_OUT3_M_real_V_U->address0(data_OUT3_M_real_V_address0);
    data_OUT3_M_real_V_U->ce0(data_OUT3_M_real_V_ce0);
    data_OUT3_M_real_V_U->we0(data_OUT3_M_real_V_we0);
    data_OUT3_M_real_V_U->d0(grp_FFT0_fu_262_data_OUT_M_real_V_d0);
    data_OUT3_M_real_V_U->q0(data_OUT3_M_real_V_q0);
    data_OUT3_M_imag_V_U = new FFT_xin_M_real_V("data_OUT3_M_imag_V_U");
    data_OUT3_M_imag_V_U->clk(ap_clk);
    data_OUT3_M_imag_V_U->reset(ap_rst_n_inv);
    data_OUT3_M_imag_V_U->address0(data_OUT3_M_imag_V_address0);
    data_OUT3_M_imag_V_U->ce0(data_OUT3_M_imag_V_ce0);
    data_OUT3_M_imag_V_U->we0(data_OUT3_M_imag_V_we0);
    data_OUT3_M_imag_V_U->d0(grp_FFT0_fu_262_data_OUT_M_imag_V_d0);
    data_OUT3_M_imag_V_U->q0(data_OUT3_M_imag_V_q0);
    data_OUT4_M_real_V_U = new FFT_xin_M_real_V("data_OUT4_M_real_V_U");
    data_OUT4_M_real_V_U->clk(ap_clk);
    data_OUT4_M_real_V_U->reset(ap_rst_n_inv);
    data_OUT4_M_real_V_U->address0(data_OUT4_M_real_V_address0);
    data_OUT4_M_real_V_U->ce0(data_OUT4_M_real_V_ce0);
    data_OUT4_M_real_V_U->we0(data_OUT4_M_real_V_we0);
    data_OUT4_M_real_V_U->d0(grp_FFT0_fu_262_data_OUT_M_real_V_d0);
    data_OUT4_M_real_V_U->q0(data_OUT4_M_real_V_q0);
    data_OUT4_M_imag_V_U = new FFT_xin_M_real_V("data_OUT4_M_imag_V_U");
    data_OUT4_M_imag_V_U->clk(ap_clk);
    data_OUT4_M_imag_V_U->reset(ap_rst_n_inv);
    data_OUT4_M_imag_V_U->address0(data_OUT4_M_imag_V_address0);
    data_OUT4_M_imag_V_U->ce0(data_OUT4_M_imag_V_ce0);
    data_OUT4_M_imag_V_U->we0(data_OUT4_M_imag_V_we0);
    data_OUT4_M_imag_V_U->d0(grp_FFT0_fu_262_data_OUT_M_imag_V_d0);
    data_OUT4_M_imag_V_U->q0(data_OUT4_M_imag_V_q0);
    xout_M_real_V_U = new FFT_xin_M_real_V("xout_M_real_V_U");
    xout_M_real_V_U->clk(ap_clk);
    xout_M_real_V_U->reset(ap_rst_n_inv);
    xout_M_real_V_U->address0(xout_M_real_V_address0);
    xout_M_real_V_U->ce0(xout_M_real_V_ce0);
    xout_M_real_V_U->we0(xout_M_real_V_we0);
    xout_M_real_V_U->d0(grp_FFT0_fu_262_data_OUT_M_real_V_d0);
    xout_M_real_V_U->q0(xout_M_real_V_q0);
    xout_M_imag_V_U = new FFT_xin_M_real_V("xout_M_imag_V_U");
    xout_M_imag_V_U->clk(ap_clk);
    xout_M_imag_V_U->reset(ap_rst_n_inv);
    xout_M_imag_V_U->address0(xout_M_imag_V_address0);
    xout_M_imag_V_U->ce0(xout_M_imag_V_ce0);
    xout_M_imag_V_U->we0(xout_M_imag_V_we0);
    xout_M_imag_V_U->d0(grp_FFT0_fu_262_data_OUT_M_imag_V_d0);
    xout_M_imag_V_U->q0(xout_M_imag_V_q0);
    grp_FFT0_fu_262 = new FFT0("grp_FFT0_fu_262");
    grp_FFT0_fu_262->ap_clk(ap_clk);
    grp_FFT0_fu_262->ap_rst(ap_rst_n_inv);
    grp_FFT0_fu_262->ap_start(grp_FFT0_fu_262_ap_start);
    grp_FFT0_fu_262->ap_done(grp_FFT0_fu_262_ap_done);
    grp_FFT0_fu_262->ap_idle(grp_FFT0_fu_262_ap_idle);
    grp_FFT0_fu_262->ap_ready(grp_FFT0_fu_262_ap_ready);
    grp_FFT0_fu_262->FFT_stage(grp_FFT0_fu_262_FFT_stage);
    grp_FFT0_fu_262->pass_check(grp_FFT0_fu_262_pass_check);
    grp_FFT0_fu_262->index_shift(grp_FFT0_fu_262_index_shift);
    grp_FFT0_fu_262->pass_shift(grp_FFT0_fu_262_pass_shift);
    grp_FFT0_fu_262->data_IN_M_real_V_address0(grp_FFT0_fu_262_data_IN_M_real_V_address0);
    grp_FFT0_fu_262->data_IN_M_real_V_ce0(grp_FFT0_fu_262_data_IN_M_real_V_ce0);
    grp_FFT0_fu_262->data_IN_M_real_V_q0(grp_FFT0_fu_262_data_IN_M_real_V_q0);
    grp_FFT0_fu_262->data_IN_M_imag_V_address0(grp_FFT0_fu_262_data_IN_M_imag_V_address0);
    grp_FFT0_fu_262->data_IN_M_imag_V_ce0(grp_FFT0_fu_262_data_IN_M_imag_V_ce0);
    grp_FFT0_fu_262->data_IN_M_imag_V_q0(grp_FFT0_fu_262_data_IN_M_imag_V_q0);
    grp_FFT0_fu_262->data_OUT_M_real_V_address0(grp_FFT0_fu_262_data_OUT_M_real_V_address0);
    grp_FFT0_fu_262->data_OUT_M_real_V_ce0(grp_FFT0_fu_262_data_OUT_M_real_V_ce0);
    grp_FFT0_fu_262->data_OUT_M_real_V_we0(grp_FFT0_fu_262_data_OUT_M_real_V_we0);
    grp_FFT0_fu_262->data_OUT_M_real_V_d0(grp_FFT0_fu_262_data_OUT_M_real_V_d0);
    grp_FFT0_fu_262->data_OUT_M_imag_V_address0(grp_FFT0_fu_262_data_OUT_M_imag_V_address0);
    grp_FFT0_fu_262->data_OUT_M_imag_V_ce0(grp_FFT0_fu_262_data_OUT_M_imag_V_ce0);
    grp_FFT0_fu_262->data_OUT_M_imag_V_we0(grp_FFT0_fu_262_data_OUT_M_imag_V_we0);
    grp_FFT0_fu_262->data_OUT_M_imag_V_d0(grp_FFT0_fu_262_data_OUT_M_imag_V_d0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( data_OUT_1_ack_in );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( exitcond_fu_375_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( data_OUT_1_ack_in );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( exitcond_fu_375_p2 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_data_IN_0_ack_in);
    sensitive << ( data_IN_0_state );

    SC_METHOD(thread_data_IN_0_ack_out);
    sensitive << ( data_IN_0_vld_out );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_data_IN_0_data_out);
    sensitive << ( data_IN_0_payload_A );
    sensitive << ( data_IN_0_payload_B );
    sensitive << ( data_IN_0_sel );

    SC_METHOD(thread_data_IN_0_load_A);
    sensitive << ( data_IN_0_sel_wr );
    sensitive << ( data_IN_0_state_cmp_full );

    SC_METHOD(thread_data_IN_0_load_B);
    sensitive << ( data_IN_0_sel_wr );
    sensitive << ( data_IN_0_state_cmp_full );

    SC_METHOD(thread_data_IN_0_sel);
    sensitive << ( data_IN_0_sel_rd );

    SC_METHOD(thread_data_IN_0_state_cmp_full);
    sensitive << ( data_IN_0_state );

    SC_METHOD(thread_data_IN_0_vld_in);
    sensitive << ( data_IN_TVALID );

    SC_METHOD(thread_data_IN_0_vld_out);
    sensitive << ( data_IN_0_state );

    SC_METHOD(thread_data_IN_TDATA_blk_n);
    sensitive << ( data_IN_0_state );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_data_IN_TREADY);
    sensitive << ( data_IN_0_state );

    SC_METHOD(thread_data_OUT0_M_imag_V_address0);
    sensitive << ( tmp_i_reg_418 );
    sensitive << ( grp_FFT0_fu_262_data_IN_M_imag_V_address0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_data_OUT0_M_imag_V_ce0);
    sensitive << ( grp_FFT0_fu_262_data_IN_M_imag_V_ce0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_data_OUT0_M_imag_V_we0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_data_OUT0_M_real_V_address0);
    sensitive << ( tmp_i_reg_418 );
    sensitive << ( grp_FFT0_fu_262_data_IN_M_real_V_address0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_data_OUT0_M_real_V_ce0);
    sensitive << ( grp_FFT0_fu_262_data_IN_M_real_V_ce0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_data_OUT0_M_real_V_we0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_data_OUT1_M_imag_V_address0);
    sensitive << ( grp_FFT0_fu_262_data_IN_M_imag_V_address0 );
    sensitive << ( grp_FFT0_fu_262_data_OUT_M_imag_V_address0 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_data_OUT1_M_imag_V_ce0);
    sensitive << ( grp_FFT0_fu_262_data_IN_M_imag_V_ce0 );
    sensitive << ( grp_FFT0_fu_262_data_OUT_M_imag_V_ce0 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_data_OUT1_M_imag_V_we0);
    sensitive << ( grp_FFT0_fu_262_data_OUT_M_imag_V_we0 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_data_OUT1_M_real_V_address0);
    sensitive << ( grp_FFT0_fu_262_data_IN_M_real_V_address0 );
    sensitive << ( grp_FFT0_fu_262_data_OUT_M_real_V_address0 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_data_OUT1_M_real_V_ce0);
    sensitive << ( grp_FFT0_fu_262_data_IN_M_real_V_ce0 );
    sensitive << ( grp_FFT0_fu_262_data_OUT_M_real_V_ce0 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_data_OUT1_M_real_V_we0);
    sensitive << ( grp_FFT0_fu_262_data_OUT_M_real_V_we0 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_data_OUT2_M_imag_V_address0);
    sensitive << ( grp_FFT0_fu_262_data_IN_M_imag_V_address0 );
    sensitive << ( grp_FFT0_fu_262_data_OUT_M_imag_V_address0 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_data_OUT2_M_imag_V_ce0);
    sensitive << ( grp_FFT0_fu_262_data_IN_M_imag_V_ce0 );
    sensitive << ( grp_FFT0_fu_262_data_OUT_M_imag_V_ce0 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_data_OUT2_M_imag_V_we0);
    sensitive << ( grp_FFT0_fu_262_data_OUT_M_imag_V_we0 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_data_OUT2_M_real_V_address0);
    sensitive << ( grp_FFT0_fu_262_data_IN_M_real_V_address0 );
    sensitive << ( grp_FFT0_fu_262_data_OUT_M_real_V_address0 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_data_OUT2_M_real_V_ce0);
    sensitive << ( grp_FFT0_fu_262_data_IN_M_real_V_ce0 );
    sensitive << ( grp_FFT0_fu_262_data_OUT_M_real_V_ce0 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_data_OUT2_M_real_V_we0);
    sensitive << ( grp_FFT0_fu_262_data_OUT_M_real_V_we0 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_data_OUT3_M_imag_V_address0);
    sensitive << ( grp_FFT0_fu_262_data_IN_M_imag_V_address0 );
    sensitive << ( grp_FFT0_fu_262_data_OUT_M_imag_V_address0 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_data_OUT3_M_imag_V_ce0);
    sensitive << ( grp_FFT0_fu_262_data_IN_M_imag_V_ce0 );
    sensitive << ( grp_FFT0_fu_262_data_OUT_M_imag_V_ce0 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_data_OUT3_M_imag_V_we0);
    sensitive << ( grp_FFT0_fu_262_data_OUT_M_imag_V_we0 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_data_OUT3_M_real_V_address0);
    sensitive << ( grp_FFT0_fu_262_data_IN_M_real_V_address0 );
    sensitive << ( grp_FFT0_fu_262_data_OUT_M_real_V_address0 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_data_OUT3_M_real_V_ce0);
    sensitive << ( grp_FFT0_fu_262_data_IN_M_real_V_ce0 );
    sensitive << ( grp_FFT0_fu_262_data_OUT_M_real_V_ce0 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_data_OUT3_M_real_V_we0);
    sensitive << ( grp_FFT0_fu_262_data_OUT_M_real_V_we0 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_data_OUT4_M_imag_V_address0);
    sensitive << ( grp_FFT0_fu_262_data_IN_M_imag_V_address0 );
    sensitive << ( grp_FFT0_fu_262_data_OUT_M_imag_V_address0 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_data_OUT4_M_imag_V_ce0);
    sensitive << ( grp_FFT0_fu_262_data_IN_M_imag_V_ce0 );
    sensitive << ( grp_FFT0_fu_262_data_OUT_M_imag_V_ce0 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_data_OUT4_M_imag_V_we0);
    sensitive << ( grp_FFT0_fu_262_data_OUT_M_imag_V_we0 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_data_OUT4_M_real_V_address0);
    sensitive << ( grp_FFT0_fu_262_data_IN_M_real_V_address0 );
    sensitive << ( grp_FFT0_fu_262_data_OUT_M_real_V_address0 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_data_OUT4_M_real_V_ce0);
    sensitive << ( grp_FFT0_fu_262_data_IN_M_real_V_ce0 );
    sensitive << ( grp_FFT0_fu_262_data_OUT_M_real_V_ce0 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_data_OUT4_M_real_V_we0);
    sensitive << ( grp_FFT0_fu_262_data_OUT_M_real_V_we0 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_data_OUT_1_ack_in);
    sensitive << ( data_OUT_1_state );

    SC_METHOD(thread_data_OUT_1_ack_out);
    sensitive << ( data_OUT_TREADY );

    SC_METHOD(thread_data_OUT_1_data_out);
    sensitive << ( data_OUT_1_payload_A );
    sensitive << ( data_OUT_1_payload_B );
    sensitive << ( data_OUT_1_sel );

    SC_METHOD(thread_data_OUT_1_load_A);
    sensitive << ( data_OUT_1_sel_wr );
    sensitive << ( data_OUT_1_state_cmp_full );

    SC_METHOD(thread_data_OUT_1_load_B);
    sensitive << ( data_OUT_1_sel_wr );
    sensitive << ( data_OUT_1_state_cmp_full );

    SC_METHOD(thread_data_OUT_1_sel);
    sensitive << ( data_OUT_1_sel_rd );

    SC_METHOD(thread_data_OUT_1_state_cmp_full);
    sensitive << ( data_OUT_1_state );

    SC_METHOD(thread_data_OUT_1_vld_in);
    sensitive << ( data_OUT_1_ack_in );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_data_OUT_1_vld_out);
    sensitive << ( data_OUT_1_state );

    SC_METHOD(thread_data_OUT_M_imag_V_a_fu_393_p3);
    sensitive << ( xout_M_real_V_q0 );
    sensitive << ( xout_M_imag_V_q0 );

    SC_METHOD(thread_data_OUT_TDATA);
    sensitive << ( data_OUT_1_data_out );

    SC_METHOD(thread_data_OUT_TDATA_blk_n);
    sensitive << ( data_OUT_1_state );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_data_OUT_TVALID);
    sensitive << ( data_OUT_1_state );

    SC_METHOD(thread_exitcond1_fu_318_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_228 );

    SC_METHOD(thread_exitcond_fu_375_p2);
    sensitive << ( data_OUT_1_ack_in );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( i1_reg_251 );

    SC_METHOD(thread_exitcond_i_fu_352_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( i_i_reg_240 );

    SC_METHOD(thread_grp_FFT0_fu_262_FFT_stage);
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_grp_FFT0_fu_262_ap_start);
    sensitive << ( grp_FFT0_fu_262_ap_start_reg );

    SC_METHOD(thread_grp_FFT0_fu_262_data_IN_M_imag_V_q0);
    sensitive << ( data_OUT0_M_imag_V_q0 );
    sensitive << ( data_OUT1_M_imag_V_q0 );
    sensitive << ( data_OUT2_M_imag_V_q0 );
    sensitive << ( data_OUT3_M_imag_V_q0 );
    sensitive << ( data_OUT4_M_imag_V_q0 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_grp_FFT0_fu_262_data_IN_M_real_V_q0);
    sensitive << ( data_OUT0_M_real_V_q0 );
    sensitive << ( data_OUT1_M_real_V_q0 );
    sensitive << ( data_OUT2_M_real_V_q0 );
    sensitive << ( data_OUT3_M_real_V_q0 );
    sensitive << ( data_OUT4_M_real_V_q0 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_grp_FFT0_fu_262_index_shift);
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_grp_FFT0_fu_262_pass_check);
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_grp_FFT0_fu_262_pass_shift);
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_i_2_fu_324_p2);
    sensitive << ( i_reg_228 );

    SC_METHOD(thread_i_3_fu_358_p2);
    sensitive << ( i_i_reg_240 );

    SC_METHOD(thread_i_4_fu_381_p2);
    sensitive << ( i1_reg_251 );

    SC_METHOD(thread_rev_32_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_i_fu_364_p1 );

    SC_METHOD(thread_rev_32_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_tmp_8_fu_387_p1);
    sensitive << ( i1_reg_251 );

    SC_METHOD(thread_tmp_i_13_fu_369_p1);
    sensitive << ( rev_32_q0 );

    SC_METHOD(thread_tmp_i_fu_364_p1);
    sensitive << ( i_i_reg_240 );

    SC_METHOD(thread_tmp_s_fu_330_p1);
    sensitive << ( i_reg_228 );

    SC_METHOD(thread_xin_M_imag_V_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_s_fu_330_p1 );
    sensitive << ( tmp_i_13_fu_369_p1 );

    SC_METHOD(thread_xin_M_imag_V_ce0);
    sensitive << ( data_IN_0_vld_out );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_xin_M_imag_V_d0);
    sensitive << ( data_IN_0_data_out );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_xin_M_imag_V_we0);
    sensitive << ( data_IN_0_vld_out );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_xin_M_real_V_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_s_fu_330_p1 );
    sensitive << ( tmp_i_13_fu_369_p1 );

    SC_METHOD(thread_xin_M_real_V_ce0);
    sensitive << ( data_IN_0_vld_out );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_xin_M_real_V_d0);
    sensitive << ( data_IN_0_data_out );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_xin_M_real_V_we0);
    sensitive << ( data_IN_0_vld_out );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_xout_M_imag_V_address0);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( grp_FFT0_fu_262_data_OUT_M_imag_V_address0 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( tmp_8_fu_387_p1 );

    SC_METHOD(thread_xout_M_imag_V_ce0);
    sensitive << ( data_OUT_1_ack_in );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( grp_FFT0_fu_262_data_OUT_M_imag_V_ce0 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_xout_M_imag_V_we0);
    sensitive << ( grp_FFT0_fu_262_data_OUT_M_imag_V_we0 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_xout_M_real_V_address0);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( grp_FFT0_fu_262_data_OUT_M_real_V_address0 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( tmp_8_fu_387_p1 );

    SC_METHOD(thread_xout_M_real_V_ce0);
    sensitive << ( data_OUT_1_ack_in );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( grp_FFT0_fu_262_data_OUT_M_real_V_ce0 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_xout_M_real_V_we0);
    sensitive << ( grp_FFT0_fu_262_data_OUT_M_real_V_we0 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_IN_0_vld_out );
    sensitive << ( data_OUT_1_ack_in );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond_i_fu_352_p2 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( exitcond_fu_375_p2 );
    sensitive << ( grp_FFT0_fu_262_ap_done );
    sensitive << ( exitcond1_fu_318_p2 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "000000000000000001";
    data_IN_0_sel_rd = SC_LOGIC_0;
    data_IN_0_sel_wr = SC_LOGIC_0;
    data_IN_0_state = "00";
    data_OUT_1_sel_rd = SC_LOGIC_0;
    data_OUT_1_sel_wr = SC_LOGIC_0;
    data_OUT_1_state = "00";
    grp_FFT0_fu_262_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "FFT_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, data_IN_TDATA, "(port)data_IN_TDATA");
    sc_trace(mVcdFile, data_IN_TVALID, "(port)data_IN_TVALID");
    sc_trace(mVcdFile, data_IN_TREADY, "(port)data_IN_TREADY");
    sc_trace(mVcdFile, data_OUT_TDATA, "(port)data_OUT_TDATA");
    sc_trace(mVcdFile, data_OUT_TVALID, "(port)data_OUT_TVALID");
    sc_trace(mVcdFile, data_OUT_TREADY, "(port)data_OUT_TREADY");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, data_IN_0_data_out, "data_IN_0_data_out");
    sc_trace(mVcdFile, data_IN_0_vld_in, "data_IN_0_vld_in");
    sc_trace(mVcdFile, data_IN_0_vld_out, "data_IN_0_vld_out");
    sc_trace(mVcdFile, data_IN_0_ack_in, "data_IN_0_ack_in");
    sc_trace(mVcdFile, data_IN_0_ack_out, "data_IN_0_ack_out");
    sc_trace(mVcdFile, data_IN_0_payload_A, "data_IN_0_payload_A");
    sc_trace(mVcdFile, data_IN_0_payload_B, "data_IN_0_payload_B");
    sc_trace(mVcdFile, data_IN_0_sel_rd, "data_IN_0_sel_rd");
    sc_trace(mVcdFile, data_IN_0_sel_wr, "data_IN_0_sel_wr");
    sc_trace(mVcdFile, data_IN_0_sel, "data_IN_0_sel");
    sc_trace(mVcdFile, data_IN_0_load_A, "data_IN_0_load_A");
    sc_trace(mVcdFile, data_IN_0_load_B, "data_IN_0_load_B");
    sc_trace(mVcdFile, data_IN_0_state, "data_IN_0_state");
    sc_trace(mVcdFile, data_IN_0_state_cmp_full, "data_IN_0_state_cmp_full");
    sc_trace(mVcdFile, data_OUT_1_data_out, "data_OUT_1_data_out");
    sc_trace(mVcdFile, data_OUT_1_vld_in, "data_OUT_1_vld_in");
    sc_trace(mVcdFile, data_OUT_1_vld_out, "data_OUT_1_vld_out");
    sc_trace(mVcdFile, data_OUT_1_ack_in, "data_OUT_1_ack_in");
    sc_trace(mVcdFile, data_OUT_1_ack_out, "data_OUT_1_ack_out");
    sc_trace(mVcdFile, data_OUT_1_payload_A, "data_OUT_1_payload_A");
    sc_trace(mVcdFile, data_OUT_1_payload_B, "data_OUT_1_payload_B");
    sc_trace(mVcdFile, data_OUT_1_sel_rd, "data_OUT_1_sel_rd");
    sc_trace(mVcdFile, data_OUT_1_sel_wr, "data_OUT_1_sel_wr");
    sc_trace(mVcdFile, data_OUT_1_sel, "data_OUT_1_sel");
    sc_trace(mVcdFile, data_OUT_1_load_A, "data_OUT_1_load_A");
    sc_trace(mVcdFile, data_OUT_1_load_B, "data_OUT_1_load_B");
    sc_trace(mVcdFile, data_OUT_1_state, "data_OUT_1_state");
    sc_trace(mVcdFile, data_OUT_1_state_cmp_full, "data_OUT_1_state_cmp_full");
    sc_trace(mVcdFile, xin_M_real_V_address0, "xin_M_real_V_address0");
    sc_trace(mVcdFile, xin_M_real_V_ce0, "xin_M_real_V_ce0");
    sc_trace(mVcdFile, xin_M_real_V_we0, "xin_M_real_V_we0");
    sc_trace(mVcdFile, xin_M_real_V_d0, "xin_M_real_V_d0");
    sc_trace(mVcdFile, xin_M_real_V_q0, "xin_M_real_V_q0");
    sc_trace(mVcdFile, xin_M_imag_V_address0, "xin_M_imag_V_address0");
    sc_trace(mVcdFile, xin_M_imag_V_ce0, "xin_M_imag_V_ce0");
    sc_trace(mVcdFile, xin_M_imag_V_we0, "xin_M_imag_V_we0");
    sc_trace(mVcdFile, xin_M_imag_V_d0, "xin_M_imag_V_d0");
    sc_trace(mVcdFile, xin_M_imag_V_q0, "xin_M_imag_V_q0");
    sc_trace(mVcdFile, rev_32_address0, "rev_32_address0");
    sc_trace(mVcdFile, rev_32_ce0, "rev_32_ce0");
    sc_trace(mVcdFile, rev_32_q0, "rev_32_q0");
    sc_trace(mVcdFile, data_OUT0_M_real_V_address0, "data_OUT0_M_real_V_address0");
    sc_trace(mVcdFile, data_OUT0_M_real_V_ce0, "data_OUT0_M_real_V_ce0");
    sc_trace(mVcdFile, data_OUT0_M_real_V_we0, "data_OUT0_M_real_V_we0");
    sc_trace(mVcdFile, data_OUT0_M_real_V_q0, "data_OUT0_M_real_V_q0");
    sc_trace(mVcdFile, data_OUT0_M_imag_V_address0, "data_OUT0_M_imag_V_address0");
    sc_trace(mVcdFile, data_OUT0_M_imag_V_ce0, "data_OUT0_M_imag_V_ce0");
    sc_trace(mVcdFile, data_OUT0_M_imag_V_we0, "data_OUT0_M_imag_V_we0");
    sc_trace(mVcdFile, data_OUT0_M_imag_V_q0, "data_OUT0_M_imag_V_q0");
    sc_trace(mVcdFile, data_OUT1_M_real_V_address0, "data_OUT1_M_real_V_address0");
    sc_trace(mVcdFile, data_OUT1_M_real_V_ce0, "data_OUT1_M_real_V_ce0");
    sc_trace(mVcdFile, data_OUT1_M_real_V_we0, "data_OUT1_M_real_V_we0");
    sc_trace(mVcdFile, data_OUT1_M_real_V_q0, "data_OUT1_M_real_V_q0");
    sc_trace(mVcdFile, data_OUT1_M_imag_V_address0, "data_OUT1_M_imag_V_address0");
    sc_trace(mVcdFile, data_OUT1_M_imag_V_ce0, "data_OUT1_M_imag_V_ce0");
    sc_trace(mVcdFile, data_OUT1_M_imag_V_we0, "data_OUT1_M_imag_V_we0");
    sc_trace(mVcdFile, data_OUT1_M_imag_V_q0, "data_OUT1_M_imag_V_q0");
    sc_trace(mVcdFile, data_OUT2_M_real_V_address0, "data_OUT2_M_real_V_address0");
    sc_trace(mVcdFile, data_OUT2_M_real_V_ce0, "data_OUT2_M_real_V_ce0");
    sc_trace(mVcdFile, data_OUT2_M_real_V_we0, "data_OUT2_M_real_V_we0");
    sc_trace(mVcdFile, data_OUT2_M_real_V_q0, "data_OUT2_M_real_V_q0");
    sc_trace(mVcdFile, data_OUT2_M_imag_V_address0, "data_OUT2_M_imag_V_address0");
    sc_trace(mVcdFile, data_OUT2_M_imag_V_ce0, "data_OUT2_M_imag_V_ce0");
    sc_trace(mVcdFile, data_OUT2_M_imag_V_we0, "data_OUT2_M_imag_V_we0");
    sc_trace(mVcdFile, data_OUT2_M_imag_V_q0, "data_OUT2_M_imag_V_q0");
    sc_trace(mVcdFile, data_OUT3_M_real_V_address0, "data_OUT3_M_real_V_address0");
    sc_trace(mVcdFile, data_OUT3_M_real_V_ce0, "data_OUT3_M_real_V_ce0");
    sc_trace(mVcdFile, data_OUT3_M_real_V_we0, "data_OUT3_M_real_V_we0");
    sc_trace(mVcdFile, data_OUT3_M_real_V_q0, "data_OUT3_M_real_V_q0");
    sc_trace(mVcdFile, data_OUT3_M_imag_V_address0, "data_OUT3_M_imag_V_address0");
    sc_trace(mVcdFile, data_OUT3_M_imag_V_ce0, "data_OUT3_M_imag_V_ce0");
    sc_trace(mVcdFile, data_OUT3_M_imag_V_we0, "data_OUT3_M_imag_V_we0");
    sc_trace(mVcdFile, data_OUT3_M_imag_V_q0, "data_OUT3_M_imag_V_q0");
    sc_trace(mVcdFile, data_OUT4_M_real_V_address0, "data_OUT4_M_real_V_address0");
    sc_trace(mVcdFile, data_OUT4_M_real_V_ce0, "data_OUT4_M_real_V_ce0");
    sc_trace(mVcdFile, data_OUT4_M_real_V_we0, "data_OUT4_M_real_V_we0");
    sc_trace(mVcdFile, data_OUT4_M_real_V_q0, "data_OUT4_M_real_V_q0");
    sc_trace(mVcdFile, data_OUT4_M_imag_V_address0, "data_OUT4_M_imag_V_address0");
    sc_trace(mVcdFile, data_OUT4_M_imag_V_ce0, "data_OUT4_M_imag_V_ce0");
    sc_trace(mVcdFile, data_OUT4_M_imag_V_we0, "data_OUT4_M_imag_V_we0");
    sc_trace(mVcdFile, data_OUT4_M_imag_V_q0, "data_OUT4_M_imag_V_q0");
    sc_trace(mVcdFile, xout_M_real_V_address0, "xout_M_real_V_address0");
    sc_trace(mVcdFile, xout_M_real_V_ce0, "xout_M_real_V_ce0");
    sc_trace(mVcdFile, xout_M_real_V_we0, "xout_M_real_V_we0");
    sc_trace(mVcdFile, xout_M_real_V_q0, "xout_M_real_V_q0");
    sc_trace(mVcdFile, xout_M_imag_V_address0, "xout_M_imag_V_address0");
    sc_trace(mVcdFile, xout_M_imag_V_ce0, "xout_M_imag_V_ce0");
    sc_trace(mVcdFile, xout_M_imag_V_we0, "xout_M_imag_V_we0");
    sc_trace(mVcdFile, xout_M_imag_V_q0, "xout_M_imag_V_q0");
    sc_trace(mVcdFile, data_IN_TDATA_blk_n, "data_IN_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, data_OUT_TDATA_blk_n, "data_OUT_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, i_2_fu_324_p2, "i_2_fu_324_p2");
    sc_trace(mVcdFile, i_2_reg_405, "i_2_reg_405");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_3_fu_358_p2, "i_3_fu_358_p2");
    sc_trace(mVcdFile, i_3_reg_413, "i_3_reg_413");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_i_fu_364_p1, "tmp_i_fu_364_p1");
    sc_trace(mVcdFile, tmp_i_reg_418, "tmp_i_reg_418");
    sc_trace(mVcdFile, exitcond_i_fu_352_p2, "exitcond_i_fu_352_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, i_4_fu_381_p2, "i_4_fu_381_p2");
    sc_trace(mVcdFile, i_4_reg_442, "i_4_reg_442");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, exitcond_fu_375_p2, "exitcond_fu_375_p2");
    sc_trace(mVcdFile, data_OUT_M_imag_V_a_fu_393_p3, "data_OUT_M_imag_V_a_fu_393_p3");
    sc_trace(mVcdFile, grp_FFT0_fu_262_ap_start, "grp_FFT0_fu_262_ap_start");
    sc_trace(mVcdFile, grp_FFT0_fu_262_ap_done, "grp_FFT0_fu_262_ap_done");
    sc_trace(mVcdFile, grp_FFT0_fu_262_ap_idle, "grp_FFT0_fu_262_ap_idle");
    sc_trace(mVcdFile, grp_FFT0_fu_262_ap_ready, "grp_FFT0_fu_262_ap_ready");
    sc_trace(mVcdFile, grp_FFT0_fu_262_FFT_stage, "grp_FFT0_fu_262_FFT_stage");
    sc_trace(mVcdFile, grp_FFT0_fu_262_pass_check, "grp_FFT0_fu_262_pass_check");
    sc_trace(mVcdFile, grp_FFT0_fu_262_index_shift, "grp_FFT0_fu_262_index_shift");
    sc_trace(mVcdFile, grp_FFT0_fu_262_pass_shift, "grp_FFT0_fu_262_pass_shift");
    sc_trace(mVcdFile, grp_FFT0_fu_262_data_IN_M_real_V_address0, "grp_FFT0_fu_262_data_IN_M_real_V_address0");
    sc_trace(mVcdFile, grp_FFT0_fu_262_data_IN_M_real_V_ce0, "grp_FFT0_fu_262_data_IN_M_real_V_ce0");
    sc_trace(mVcdFile, grp_FFT0_fu_262_data_IN_M_real_V_q0, "grp_FFT0_fu_262_data_IN_M_real_V_q0");
    sc_trace(mVcdFile, grp_FFT0_fu_262_data_IN_M_imag_V_address0, "grp_FFT0_fu_262_data_IN_M_imag_V_address0");
    sc_trace(mVcdFile, grp_FFT0_fu_262_data_IN_M_imag_V_ce0, "grp_FFT0_fu_262_data_IN_M_imag_V_ce0");
    sc_trace(mVcdFile, grp_FFT0_fu_262_data_IN_M_imag_V_q0, "grp_FFT0_fu_262_data_IN_M_imag_V_q0");
    sc_trace(mVcdFile, grp_FFT0_fu_262_data_OUT_M_real_V_address0, "grp_FFT0_fu_262_data_OUT_M_real_V_address0");
    sc_trace(mVcdFile, grp_FFT0_fu_262_data_OUT_M_real_V_ce0, "grp_FFT0_fu_262_data_OUT_M_real_V_ce0");
    sc_trace(mVcdFile, grp_FFT0_fu_262_data_OUT_M_real_V_we0, "grp_FFT0_fu_262_data_OUT_M_real_V_we0");
    sc_trace(mVcdFile, grp_FFT0_fu_262_data_OUT_M_real_V_d0, "grp_FFT0_fu_262_data_OUT_M_real_V_d0");
    sc_trace(mVcdFile, grp_FFT0_fu_262_data_OUT_M_imag_V_address0, "grp_FFT0_fu_262_data_OUT_M_imag_V_address0");
    sc_trace(mVcdFile, grp_FFT0_fu_262_data_OUT_M_imag_V_ce0, "grp_FFT0_fu_262_data_OUT_M_imag_V_ce0");
    sc_trace(mVcdFile, grp_FFT0_fu_262_data_OUT_M_imag_V_we0, "grp_FFT0_fu_262_data_OUT_M_imag_V_we0");
    sc_trace(mVcdFile, grp_FFT0_fu_262_data_OUT_M_imag_V_d0, "grp_FFT0_fu_262_data_OUT_M_imag_V_d0");
    sc_trace(mVcdFile, i_reg_228, "i_reg_228");
    sc_trace(mVcdFile, i_i_reg_240, "i_i_reg_240");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, exitcond1_fu_318_p2, "exitcond1_fu_318_p2");
    sc_trace(mVcdFile, i1_reg_251, "i1_reg_251");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, grp_FFT0_fu_262_ap_start_reg, "grp_FFT0_fu_262_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, tmp_s_fu_330_p1, "tmp_s_fu_330_p1");
    sc_trace(mVcdFile, tmp_i_13_fu_369_p1, "tmp_i_13_fu_369_p1");
    sc_trace(mVcdFile, tmp_8_fu_387_p1, "tmp_8_fu_387_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("FFT.hdltvin.dat");
    mHdltvoutHandle.open("FFT.hdltvout.dat");
}

FFT::~FFT() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete xin_M_real_V_U;
    delete xin_M_imag_V_U;
    delete rev_32_U;
    delete data_OUT0_M_real_V_U;
    delete data_OUT0_M_imag_V_U;
    delete data_OUT1_M_real_V_U;
    delete data_OUT1_M_imag_V_U;
    delete data_OUT2_M_real_V_U;
    delete data_OUT2_M_imag_V_U;
    delete data_OUT3_M_real_V_U;
    delete data_OUT3_M_imag_V_U;
    delete data_OUT4_M_real_V_U;
    delete data_OUT4_M_imag_V_U;
    delete xout_M_real_V_U;
    delete xout_M_imag_V_U;
    delete grp_FFT0_fu_262;
}

void FFT::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        data_IN_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, data_IN_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, data_IN_0_vld_out.read()))) {
            data_IN_0_sel_rd =  (sc_logic) (~data_IN_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        data_IN_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, data_IN_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, data_IN_0_ack_in.read()))) {
            data_IN_0_sel_wr =  (sc_logic) (~data_IN_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        data_IN_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, data_IN_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, data_IN_0_ack_out.read()) && 
              esl_seteq<1,2,2>(data_IN_0_state.read(), ap_const_lv2_3)) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, data_IN_0_vld_in.read()) && 
              esl_seteq<1,2,2>(data_IN_0_state.read(), ap_const_lv2_2)))) {
            data_IN_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, data_IN_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, data_IN_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(data_IN_0_state.read(), ap_const_lv2_3)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, data_IN_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(data_IN_0_state.read(), ap_const_lv2_1)))) {
            data_IN_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, data_IN_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(data_IN_0_state.read(), ap_const_lv2_2)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, data_IN_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(data_IN_0_state.read(), ap_const_lv2_1)) || 
                    (esl_seteq<1,2,2>(data_IN_0_state.read(), ap_const_lv2_3) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, data_IN_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, data_IN_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, data_IN_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, data_IN_0_ack_out.read()))))) {
            data_IN_0_state = ap_const_lv2_3;
        } else {
            data_IN_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        data_OUT_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, data_OUT_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, data_OUT_1_vld_out.read()))) {
            data_OUT_1_sel_rd =  (sc_logic) (~data_OUT_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        data_OUT_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, data_OUT_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, data_OUT_1_ack_in.read()))) {
            data_OUT_1_sel_wr =  (sc_logic) (~data_OUT_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        data_OUT_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, data_OUT_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, data_OUT_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, data_OUT_1_state.read())))) {
            data_OUT_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, data_OUT_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, data_OUT_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, data_OUT_1_state.read())))) {
            data_OUT_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, data_OUT_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, data_OUT_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, data_OUT_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, data_OUT_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, data_OUT_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, data_OUT_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, data_OUT_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, data_OUT_1_ack_out.read()))))) {
            data_OUT_1_state = ap_const_lv2_3;
        } else {
            data_OUT_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_FFT0_fu_262_ap_start_reg = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(exitcond_i_fu_352_p2.read(), ap_const_lv1_1) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
            grp_FFT0_fu_262_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_FFT0_fu_262_ap_ready.read())) {
            grp_FFT0_fu_262_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && 
         esl_seteq<1,1,1>(data_OUT_1_ack_in.read(), ap_const_logic_1))) {
        i1_reg_251 = i_4_reg_442.read();
    } else if ((esl_seteq<1,1,1>(grp_FFT0_fu_262_ap_done.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()))) {
        i1_reg_251 = ap_const_lv6_0;
    }
    if ((esl_seteq<1,1,1>(exitcond1_fu_318_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        i_i_reg_240 = ap_const_lv6_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        i_i_reg_240 = i_3_reg_413.read();
    }
    if ((esl_seteq<1,1,1>(data_IN_0_vld_out.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        i_reg_228 = i_2_reg_405.read();
    } else if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        i_reg_228 = ap_const_lv6_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, data_IN_0_load_A.read())) {
        data_IN_0_payload_A = data_IN_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, data_IN_0_load_B.read())) {
        data_IN_0_payload_B = data_IN_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, data_OUT_1_load_A.read())) {
        data_OUT_1_payload_A = data_OUT_M_imag_V_a_fu_393_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, data_OUT_1_load_B.read())) {
        data_OUT_1_payload_B = data_OUT_M_imag_V_a_fu_393_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_2_reg_405 = i_2_fu_324_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i_3_reg_413 = i_3_fu_358_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && esl_seteq<1,1,1>(data_OUT_1_ack_in.read(), ap_const_logic_1))) {
        i_4_reg_442 = i_4_fu_381_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_i_fu_352_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        tmp_i_reg_418 = tmp_i_fu_364_p1.read();
    }
}

void FFT::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void FFT::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void FFT::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void FFT::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void FFT::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void FFT::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void FFT::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void FFT::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void FFT::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void FFT::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void FFT::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void FFT::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void FFT::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void FFT::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void FFT::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void FFT::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void FFT::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void FFT::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void FFT::thread_ap_done() {
    if ((esl_seteq<1,1,1>(exitcond_fu_375_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
         esl_seteq<1,1,1>(data_OUT_1_ack_in.read(), ap_const_logic_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void FFT::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void FFT::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(exitcond_fu_375_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
         esl_seteq<1,1,1>(data_OUT_1_ack_in.read(), ap_const_logic_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void FFT::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void FFT::thread_data_IN_0_ack_in() {
    data_IN_0_ack_in = data_IN_0_state.read()[1];
}

void FFT::thread_data_IN_0_ack_out() {
    if ((esl_seteq<1,1,1>(data_IN_0_vld_out.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        data_IN_0_ack_out = ap_const_logic_1;
    } else {
        data_IN_0_ack_out = ap_const_logic_0;
    }
}

void FFT::thread_data_IN_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, data_IN_0_sel.read())) {
        data_IN_0_data_out = data_IN_0_payload_B.read();
    } else {
        data_IN_0_data_out = data_IN_0_payload_A.read();
    }
}

void FFT::thread_data_IN_0_load_A() {
    data_IN_0_load_A = (data_IN_0_state_cmp_full.read() & ~data_IN_0_sel_wr.read());
}

void FFT::thread_data_IN_0_load_B() {
    data_IN_0_load_B = (data_IN_0_sel_wr.read() & data_IN_0_state_cmp_full.read());
}

void FFT::thread_data_IN_0_sel() {
    data_IN_0_sel = data_IN_0_sel_rd.read();
}

void FFT::thread_data_IN_0_state_cmp_full() {
    data_IN_0_state_cmp_full =  (sc_logic) ((!data_IN_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(data_IN_0_state.read() != ap_const_lv2_1))[0];
}

void FFT::thread_data_IN_0_vld_in() {
    data_IN_0_vld_in = data_IN_TVALID.read();
}

void FFT::thread_data_IN_0_vld_out() {
    data_IN_0_vld_out = data_IN_0_state.read()[0];
}

void FFT::thread_data_IN_TDATA_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        data_IN_TDATA_blk_n = data_IN_0_state.read()[0];
    } else {
        data_IN_TDATA_blk_n = ap_const_logic_1;
    }
}

void FFT::thread_data_IN_TREADY() {
    data_IN_TREADY = data_IN_0_state.read()[1];
}

void FFT::thread_data_OUT0_M_imag_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        data_OUT0_M_imag_V_address0 =  (sc_lv<5>) (tmp_i_reg_418.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        data_OUT0_M_imag_V_address0 = grp_FFT0_fu_262_data_IN_M_imag_V_address0.read();
    } else {
        data_OUT0_M_imag_V_address0 = "XXXXX";
    }
}

void FFT::thread_data_OUT0_M_imag_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        data_OUT0_M_imag_V_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        data_OUT0_M_imag_V_ce0 = grp_FFT0_fu_262_data_IN_M_imag_V_ce0.read();
    } else {
        data_OUT0_M_imag_V_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT0_M_imag_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        data_OUT0_M_imag_V_we0 = ap_const_logic_1;
    } else {
        data_OUT0_M_imag_V_we0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT0_M_real_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        data_OUT0_M_real_V_address0 =  (sc_lv<5>) (tmp_i_reg_418.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        data_OUT0_M_real_V_address0 = grp_FFT0_fu_262_data_IN_M_real_V_address0.read();
    } else {
        data_OUT0_M_real_V_address0 = "XXXXX";
    }
}

void FFT::thread_data_OUT0_M_real_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        data_OUT0_M_real_V_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        data_OUT0_M_real_V_ce0 = grp_FFT0_fu_262_data_IN_M_real_V_ce0.read();
    } else {
        data_OUT0_M_real_V_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT0_M_real_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        data_OUT0_M_real_V_we0 = ap_const_logic_1;
    } else {
        data_OUT0_M_real_V_we0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT1_M_imag_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        data_OUT1_M_imag_V_address0 = grp_FFT0_fu_262_data_OUT_M_imag_V_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        data_OUT1_M_imag_V_address0 = grp_FFT0_fu_262_data_IN_M_imag_V_address0.read();
    } else {
        data_OUT1_M_imag_V_address0 = "XXXXX";
    }
}

void FFT::thread_data_OUT1_M_imag_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        data_OUT1_M_imag_V_ce0 = grp_FFT0_fu_262_data_OUT_M_imag_V_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        data_OUT1_M_imag_V_ce0 = grp_FFT0_fu_262_data_IN_M_imag_V_ce0.read();
    } else {
        data_OUT1_M_imag_V_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT1_M_imag_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        data_OUT1_M_imag_V_we0 = grp_FFT0_fu_262_data_OUT_M_imag_V_we0.read();
    } else {
        data_OUT1_M_imag_V_we0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT1_M_real_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        data_OUT1_M_real_V_address0 = grp_FFT0_fu_262_data_OUT_M_real_V_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        data_OUT1_M_real_V_address0 = grp_FFT0_fu_262_data_IN_M_real_V_address0.read();
    } else {
        data_OUT1_M_real_V_address0 = "XXXXX";
    }
}

void FFT::thread_data_OUT1_M_real_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        data_OUT1_M_real_V_ce0 = grp_FFT0_fu_262_data_OUT_M_real_V_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        data_OUT1_M_real_V_ce0 = grp_FFT0_fu_262_data_IN_M_real_V_ce0.read();
    } else {
        data_OUT1_M_real_V_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT1_M_real_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        data_OUT1_M_real_V_we0 = grp_FFT0_fu_262_data_OUT_M_real_V_we0.read();
    } else {
        data_OUT1_M_real_V_we0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT2_M_imag_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        data_OUT2_M_imag_V_address0 = grp_FFT0_fu_262_data_OUT_M_imag_V_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        data_OUT2_M_imag_V_address0 = grp_FFT0_fu_262_data_IN_M_imag_V_address0.read();
    } else {
        data_OUT2_M_imag_V_address0 = "XXXXX";
    }
}

void FFT::thread_data_OUT2_M_imag_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        data_OUT2_M_imag_V_ce0 = grp_FFT0_fu_262_data_OUT_M_imag_V_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        data_OUT2_M_imag_V_ce0 = grp_FFT0_fu_262_data_IN_M_imag_V_ce0.read();
    } else {
        data_OUT2_M_imag_V_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT2_M_imag_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        data_OUT2_M_imag_V_we0 = grp_FFT0_fu_262_data_OUT_M_imag_V_we0.read();
    } else {
        data_OUT2_M_imag_V_we0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT2_M_real_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        data_OUT2_M_real_V_address0 = grp_FFT0_fu_262_data_OUT_M_real_V_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        data_OUT2_M_real_V_address0 = grp_FFT0_fu_262_data_IN_M_real_V_address0.read();
    } else {
        data_OUT2_M_real_V_address0 = "XXXXX";
    }
}

void FFT::thread_data_OUT2_M_real_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        data_OUT2_M_real_V_ce0 = grp_FFT0_fu_262_data_OUT_M_real_V_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        data_OUT2_M_real_V_ce0 = grp_FFT0_fu_262_data_IN_M_real_V_ce0.read();
    } else {
        data_OUT2_M_real_V_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT2_M_real_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        data_OUT2_M_real_V_we0 = grp_FFT0_fu_262_data_OUT_M_real_V_we0.read();
    } else {
        data_OUT2_M_real_V_we0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT3_M_imag_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        data_OUT3_M_imag_V_address0 = grp_FFT0_fu_262_data_OUT_M_imag_V_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        data_OUT3_M_imag_V_address0 = grp_FFT0_fu_262_data_IN_M_imag_V_address0.read();
    } else {
        data_OUT3_M_imag_V_address0 = "XXXXX";
    }
}

void FFT::thread_data_OUT3_M_imag_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        data_OUT3_M_imag_V_ce0 = grp_FFT0_fu_262_data_OUT_M_imag_V_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        data_OUT3_M_imag_V_ce0 = grp_FFT0_fu_262_data_IN_M_imag_V_ce0.read();
    } else {
        data_OUT3_M_imag_V_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT3_M_imag_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        data_OUT3_M_imag_V_we0 = grp_FFT0_fu_262_data_OUT_M_imag_V_we0.read();
    } else {
        data_OUT3_M_imag_V_we0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT3_M_real_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        data_OUT3_M_real_V_address0 = grp_FFT0_fu_262_data_OUT_M_real_V_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        data_OUT3_M_real_V_address0 = grp_FFT0_fu_262_data_IN_M_real_V_address0.read();
    } else {
        data_OUT3_M_real_V_address0 = "XXXXX";
    }
}

void FFT::thread_data_OUT3_M_real_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        data_OUT3_M_real_V_ce0 = grp_FFT0_fu_262_data_OUT_M_real_V_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        data_OUT3_M_real_V_ce0 = grp_FFT0_fu_262_data_IN_M_real_V_ce0.read();
    } else {
        data_OUT3_M_real_V_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT3_M_real_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        data_OUT3_M_real_V_we0 = grp_FFT0_fu_262_data_OUT_M_real_V_we0.read();
    } else {
        data_OUT3_M_real_V_we0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT4_M_imag_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        data_OUT4_M_imag_V_address0 = grp_FFT0_fu_262_data_OUT_M_imag_V_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        data_OUT4_M_imag_V_address0 = grp_FFT0_fu_262_data_IN_M_imag_V_address0.read();
    } else {
        data_OUT4_M_imag_V_address0 = "XXXXX";
    }
}

void FFT::thread_data_OUT4_M_imag_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        data_OUT4_M_imag_V_ce0 = grp_FFT0_fu_262_data_OUT_M_imag_V_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        data_OUT4_M_imag_V_ce0 = grp_FFT0_fu_262_data_IN_M_imag_V_ce0.read();
    } else {
        data_OUT4_M_imag_V_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT4_M_imag_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        data_OUT4_M_imag_V_we0 = grp_FFT0_fu_262_data_OUT_M_imag_V_we0.read();
    } else {
        data_OUT4_M_imag_V_we0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT4_M_real_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        data_OUT4_M_real_V_address0 = grp_FFT0_fu_262_data_OUT_M_real_V_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        data_OUT4_M_real_V_address0 = grp_FFT0_fu_262_data_IN_M_real_V_address0.read();
    } else {
        data_OUT4_M_real_V_address0 = "XXXXX";
    }
}

void FFT::thread_data_OUT4_M_real_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        data_OUT4_M_real_V_ce0 = grp_FFT0_fu_262_data_OUT_M_real_V_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        data_OUT4_M_real_V_ce0 = grp_FFT0_fu_262_data_IN_M_real_V_ce0.read();
    } else {
        data_OUT4_M_real_V_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT4_M_real_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        data_OUT4_M_real_V_we0 = grp_FFT0_fu_262_data_OUT_M_real_V_we0.read();
    } else {
        data_OUT4_M_real_V_we0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT_1_ack_in() {
    data_OUT_1_ack_in = data_OUT_1_state.read()[1];
}

void FFT::thread_data_OUT_1_ack_out() {
    data_OUT_1_ack_out = data_OUT_TREADY.read();
}

void FFT::thread_data_OUT_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, data_OUT_1_sel.read())) {
        data_OUT_1_data_out = data_OUT_1_payload_B.read();
    } else {
        data_OUT_1_data_out = data_OUT_1_payload_A.read();
    }
}

void FFT::thread_data_OUT_1_load_A() {
    data_OUT_1_load_A = (data_OUT_1_state_cmp_full.read() & ~data_OUT_1_sel_wr.read());
}

void FFT::thread_data_OUT_1_load_B() {
    data_OUT_1_load_B = (data_OUT_1_sel_wr.read() & data_OUT_1_state_cmp_full.read());
}

void FFT::thread_data_OUT_1_sel() {
    data_OUT_1_sel = data_OUT_1_sel_rd.read();
}

void FFT::thread_data_OUT_1_state_cmp_full() {
    data_OUT_1_state_cmp_full =  (sc_logic) ((!data_OUT_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(data_OUT_1_state.read() != ap_const_lv2_1))[0];
}

void FFT::thread_data_OUT_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
         esl_seteq<1,1,1>(data_OUT_1_ack_in.read(), ap_const_logic_1))) {
        data_OUT_1_vld_in = ap_const_logic_1;
    } else {
        data_OUT_1_vld_in = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT_1_vld_out() {
    data_OUT_1_vld_out = data_OUT_1_state.read()[0];
}

void FFT::thread_data_OUT_M_imag_V_a_fu_393_p3() {
    data_OUT_M_imag_V_a_fu_393_p3 = esl_concat<16,16>(xout_M_imag_V_q0.read(), xout_M_real_V_q0.read());
}

void FFT::thread_data_OUT_TDATA() {
    data_OUT_TDATA = data_OUT_1_data_out.read();
}

void FFT::thread_data_OUT_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
        data_OUT_TDATA_blk_n = data_OUT_1_state.read()[1];
    } else {
        data_OUT_TDATA_blk_n = ap_const_logic_1;
    }
}

void FFT::thread_data_OUT_TVALID() {
    data_OUT_TVALID = data_OUT_1_state.read()[0];
}

void FFT::thread_exitcond1_fu_318_p2() {
    exitcond1_fu_318_p2 = (!i_reg_228.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_228.read() == ap_const_lv6_20);
}

void FFT::thread_exitcond_fu_375_p2() {
    exitcond_fu_375_p2 = (!i1_reg_251.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(i1_reg_251.read() == ap_const_lv6_20);
}

void FFT::thread_exitcond_i_fu_352_p2() {
    exitcond_i_fu_352_p2 = (!i_i_reg_240.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(i_i_reg_240.read() == ap_const_lv6_20);
}

void FFT::thread_grp_FFT0_fu_262_FFT_stage() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        grp_FFT0_fu_262_FFT_stage = ap_const_lv6_10;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        grp_FFT0_fu_262_FFT_stage = ap_const_lv6_8;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        grp_FFT0_fu_262_FFT_stage = ap_const_lv6_4;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        grp_FFT0_fu_262_FFT_stage = ap_const_lv6_2;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_FFT0_fu_262_FFT_stage = ap_const_lv6_1;
    } else {
        grp_FFT0_fu_262_FFT_stage =  (sc_lv<6>) ("XXXXXX");
    }
}

void FFT::thread_grp_FFT0_fu_262_ap_start() {
    grp_FFT0_fu_262_ap_start = grp_FFT0_fu_262_ap_start_reg.read();
}

void FFT::thread_grp_FFT0_fu_262_data_IN_M_imag_V_q0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        grp_FFT0_fu_262_data_IN_M_imag_V_q0 = data_OUT4_M_imag_V_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        grp_FFT0_fu_262_data_IN_M_imag_V_q0 = data_OUT3_M_imag_V_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        grp_FFT0_fu_262_data_IN_M_imag_V_q0 = data_OUT2_M_imag_V_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        grp_FFT0_fu_262_data_IN_M_imag_V_q0 = data_OUT1_M_imag_V_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_FFT0_fu_262_data_IN_M_imag_V_q0 = data_OUT0_M_imag_V_q0.read();
    } else {
        grp_FFT0_fu_262_data_IN_M_imag_V_q0 =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
    }
}

void FFT::thread_grp_FFT0_fu_262_data_IN_M_real_V_q0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        grp_FFT0_fu_262_data_IN_M_real_V_q0 = data_OUT4_M_real_V_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        grp_FFT0_fu_262_data_IN_M_real_V_q0 = data_OUT3_M_real_V_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        grp_FFT0_fu_262_data_IN_M_real_V_q0 = data_OUT2_M_real_V_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        grp_FFT0_fu_262_data_IN_M_real_V_q0 = data_OUT1_M_real_V_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_FFT0_fu_262_data_IN_M_real_V_q0 = data_OUT0_M_real_V_q0.read();
    } else {
        grp_FFT0_fu_262_data_IN_M_real_V_q0 =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
    }
}

void FFT::thread_grp_FFT0_fu_262_index_shift() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        grp_FFT0_fu_262_index_shift = ap_const_lv4_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        grp_FFT0_fu_262_index_shift = ap_const_lv4_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        grp_FFT0_fu_262_index_shift = ap_const_lv4_2;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        grp_FFT0_fu_262_index_shift = ap_const_lv4_3;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_FFT0_fu_262_index_shift = ap_const_lv4_4;
    } else {
        grp_FFT0_fu_262_index_shift =  (sc_lv<4>) ("XXXX");
    }
}

void FFT::thread_grp_FFT0_fu_262_pass_check() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        grp_FFT0_fu_262_pass_check = ap_const_lv6_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        grp_FFT0_fu_262_pass_check = ap_const_lv6_2;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        grp_FFT0_fu_262_pass_check = ap_const_lv6_4;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        grp_FFT0_fu_262_pass_check = ap_const_lv6_8;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_FFT0_fu_262_pass_check = ap_const_lv6_10;
    } else {
        grp_FFT0_fu_262_pass_check =  (sc_lv<6>) ("XXXXXX");
    }
}

void FFT::thread_grp_FFT0_fu_262_pass_shift() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        grp_FFT0_fu_262_pass_shift = ap_const_lv4_5;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        grp_FFT0_fu_262_pass_shift = ap_const_lv4_4;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        grp_FFT0_fu_262_pass_shift = ap_const_lv4_3;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        grp_FFT0_fu_262_pass_shift = ap_const_lv4_2;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_FFT0_fu_262_pass_shift = ap_const_lv4_1;
    } else {
        grp_FFT0_fu_262_pass_shift =  (sc_lv<4>) ("XXXX");
    }
}

void FFT::thread_i_2_fu_324_p2() {
    i_2_fu_324_p2 = (!i_reg_228.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_reg_228.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void FFT::thread_i_3_fu_358_p2() {
    i_3_fu_358_p2 = (!i_i_reg_240.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_i_reg_240.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void FFT::thread_i_4_fu_381_p2() {
    i_4_fu_381_p2 = (!i1_reg_251.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i1_reg_251.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void FFT::thread_rev_32_address0() {
    rev_32_address0 =  (sc_lv<5>) (tmp_i_fu_364_p1.read());
}

void FFT::thread_rev_32_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        rev_32_ce0 = ap_const_logic_1;
    } else {
        rev_32_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_tmp_8_fu_387_p1() {
    tmp_8_fu_387_p1 = esl_zext<64,6>(i1_reg_251.read());
}

void FFT::thread_tmp_i_13_fu_369_p1() {
    tmp_i_13_fu_369_p1 = esl_zext<64,5>(rev_32_q0.read());
}

void FFT::thread_tmp_i_fu_364_p1() {
    tmp_i_fu_364_p1 = esl_zext<64,6>(i_i_reg_240.read());
}

void FFT::thread_tmp_s_fu_330_p1() {
    tmp_s_fu_330_p1 = esl_zext<64,6>(i_reg_228.read());
}

void FFT::thread_xin_M_imag_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        xin_M_imag_V_address0 =  (sc_lv<5>) (tmp_i_13_fu_369_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        xin_M_imag_V_address0 =  (sc_lv<5>) (tmp_s_fu_330_p1.read());
    } else {
        xin_M_imag_V_address0 = "XXXXX";
    }
}

void FFT::thread_xin_M_imag_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         (esl_seteq<1,1,1>(data_IN_0_vld_out.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())))) {
        xin_M_imag_V_ce0 = ap_const_logic_1;
    } else {
        xin_M_imag_V_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_xin_M_imag_V_d0() {
    xin_M_imag_V_d0 = data_IN_0_data_out.read().range(31, 16);
}

void FFT::thread_xin_M_imag_V_we0() {
    if ((esl_seteq<1,1,1>(data_IN_0_vld_out.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        xin_M_imag_V_we0 = ap_const_logic_1;
    } else {
        xin_M_imag_V_we0 = ap_const_logic_0;
    }
}

void FFT::thread_xin_M_real_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        xin_M_real_V_address0 =  (sc_lv<5>) (tmp_i_13_fu_369_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        xin_M_real_V_address0 =  (sc_lv<5>) (tmp_s_fu_330_p1.read());
    } else {
        xin_M_real_V_address0 = "XXXXX";
    }
}

void FFT::thread_xin_M_real_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         (esl_seteq<1,1,1>(data_IN_0_vld_out.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())))) {
        xin_M_real_V_ce0 = ap_const_logic_1;
    } else {
        xin_M_real_V_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_xin_M_real_V_d0() {
    xin_M_real_V_d0 = data_IN_0_data_out.read().range(16-1, 0);
}

void FFT::thread_xin_M_real_V_we0() {
    if ((esl_seteq<1,1,1>(data_IN_0_vld_out.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        xin_M_real_V_we0 = ap_const_logic_1;
    } else {
        xin_M_real_V_we0 = ap_const_logic_0;
    }
}

void FFT::thread_xout_M_imag_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        xout_M_imag_V_address0 =  (sc_lv<5>) (tmp_8_fu_387_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        xout_M_imag_V_address0 = grp_FFT0_fu_262_data_OUT_M_imag_V_address0.read();
    } else {
        xout_M_imag_V_address0 = "XXXXX";
    }
}

void FFT::thread_xout_M_imag_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
         esl_seteq<1,1,1>(data_OUT_1_ack_in.read(), ap_const_logic_1))) {
        xout_M_imag_V_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        xout_M_imag_V_ce0 = grp_FFT0_fu_262_data_OUT_M_imag_V_ce0.read();
    } else {
        xout_M_imag_V_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_xout_M_imag_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        xout_M_imag_V_we0 = grp_FFT0_fu_262_data_OUT_M_imag_V_we0.read();
    } else {
        xout_M_imag_V_we0 = ap_const_logic_0;
    }
}

void FFT::thread_xout_M_real_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        xout_M_real_V_address0 =  (sc_lv<5>) (tmp_8_fu_387_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        xout_M_real_V_address0 = grp_FFT0_fu_262_data_OUT_M_real_V_address0.read();
    } else {
        xout_M_real_V_address0 = "XXXXX";
    }
}

void FFT::thread_xout_M_real_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
         esl_seteq<1,1,1>(data_OUT_1_ack_in.read(), ap_const_logic_1))) {
        xout_M_real_V_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        xout_M_real_V_ce0 = grp_FFT0_fu_262_data_OUT_M_real_V_ce0.read();
    } else {
        xout_M_real_V_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_xout_M_real_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        xout_M_real_V_we0 = grp_FFT0_fu_262_data_OUT_M_real_V_we0.read();
    } else {
        xout_M_real_V_we0 = ap_const_logic_0;
    }
}

void FFT::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(exitcond1_fu_318_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(data_IN_0_vld_out.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(exitcond_i_fu_352_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(grp_FFT0_fu_262_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(grp_FFT0_fu_262_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(grp_FFT0_fu_262_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            if ((esl_seteq<1,1,1>(grp_FFT0_fu_262_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
                ap_NS_fsm = ap_ST_fsm_state14;
            } else {
                ap_NS_fsm = ap_ST_fsm_state13;
            }
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            if ((esl_seteq<1,1,1>(grp_FFT0_fu_262_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()))) {
                ap_NS_fsm = ap_ST_fsm_state16;
            } else {
                ap_NS_fsm = ap_ST_fsm_state15;
            }
            break;
        case 32768 : 
            if ((esl_seteq<1,1,1>(exitcond_fu_375_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && esl_seteq<1,1,1>(data_OUT_1_ack_in.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else if ((esl_seteq<1,1,1>(exitcond_fu_375_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && esl_seteq<1,1,1>(data_OUT_1_ack_in.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state17;
            } else {
                ap_NS_fsm = ap_ST_fsm_state16;
            }
            break;
        case 65536 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && esl_seteq<1,1,1>(data_OUT_1_ack_in.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state18;
            } else {
                ap_NS_fsm = ap_ST_fsm_state17;
            }
            break;
        case 131072 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && esl_seteq<1,1,1>(data_OUT_1_ack_in.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state16;
            } else {
                ap_NS_fsm = ap_ST_fsm_state18;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<18>) ("XXXXXXXXXXXXXXXXXX");
            break;
    }
}

void FFT::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data_IN_TDATA\" :  \"" << data_IN_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data_IN_TVALID\" :  \"" << data_IN_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_IN_TREADY\" :  \"" << data_IN_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_OUT_TDATA\" :  \"" << data_OUT_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_OUT_TVALID\" :  \"" << data_OUT_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data_OUT_TREADY\" :  \"" << data_OUT_TREADY.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

